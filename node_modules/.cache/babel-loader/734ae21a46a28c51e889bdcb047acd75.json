{"ast":null,"code":"import { getUser, setUser } from \"./LoginService\";\n\nconst isMilestoneAchieved = (usr, projectId, milestone) => {\n  const userProjectIds = usr.projectsEnrolled.map(p => p.projectId);\n  if (!userProjectIds.includes(projectId)) return false;\n  const currentProject = usr.projectsEnrolled.filter(p => p.projectId == projectId)[0];\n  return currentProject.milestonesAchieved.includes(milestone.name);\n};\n\nconst isEnrolled = (usr, id) => {\n  console.log;\n  const projectIds = usr.projectsEnrolled.map(p => p.projectId);\n  return projectIds.includes(id);\n};\n\nconst enrollToProject = (id, updateState) => {\n  const user = getUser();\n  user.projectsEnrolled.push({\n    projectId: id,\n    milestonesAchieved: []\n  });\n  fetch(\"http://localhost:8000/users/\" + user.id, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  }).then(data => {\n    setUser(data);\n    updateState(data);\n    console.log(data);\n  });\n};\n\nexport { isMilestoneAchieved, isEnrolled, enrollToProject };","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/src/utilities/ProjectService.js"],"names":["getUser","setUser","isMilestoneAchieved","usr","projectId","milestone","userProjectIds","projectsEnrolled","map","p","includes","currentProject","filter","milestonesAchieved","name","isEnrolled","id","console","log","projectIds","enrollToProject","updateState","user","push","fetch","method","headers","body","JSON","stringify","then","res","ok","json","data"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,gBAAjC;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,GAAD,EAAKC,SAAL,EAAeC,SAAf,KAA2B;AACrD,QAAMC,cAAc,GAAGH,GAAG,CAACI,gBAAJ,CAAqBC,GAArB,CAA0BC,CAAD,IAAMA,CAAC,CAACL,SAAjC,CAAvB;AACA,MAAG,CAACE,cAAc,CAACI,QAAf,CAAwBN,SAAxB,CAAJ,EACE,OAAO,KAAP;AACF,QAAMO,cAAc,GAAGR,GAAG,CAACI,gBAAJ,CAAqBK,MAArB,CAA6BH,CAAD,IAAMA,CAAC,CAACL,SAAF,IAAaA,SAA/C,EAA2D,CAA3D,CAAvB;AACA,SAAOO,cAAc,CAACE,kBAAf,CAAkCH,QAAlC,CAA2CL,SAAS,CAACS,IAArD,CAAP;AAED,CAPD;;AASA,MAAMC,UAAU,GAAG,CAACZ,GAAD,EAAKa,EAAL,KAAY;AAC7BC,EAAAA,OAAO,CAACC,GAAR;AACA,QAAMC,UAAU,GAAGhB,GAAG,CAACI,gBAAJ,CAAqBC,GAArB,CAA0BC,CAAD,IAAKA,CAAC,CAACL,SAAhC,CAAnB;AACA,SAAOe,UAAU,CAACT,QAAX,CAAoBM,EAApB,CAAP;AACD,CAJD;;AAMA,MAAMI,eAAe,GAAG,CAACJ,EAAD,EAAKK,WAAL,KAAmB;AACzC,QAAMC,IAAI,GAAGtB,OAAO,EAApB;AACAsB,EAAAA,IAAI,CAACf,gBAAL,CAAsBgB,IAAtB,CAA2B;AACzBnB,IAAAA,SAAS,EAAEY,EADc;AAEzBH,IAAAA,kBAAkB,EAAE;AAFK,GAA3B;AAIAW,EAAAA,KAAK,CAAC,iCAA+BF,IAAI,CAACN,EAArC,EACL;AACES,IAAAA,MAAM,EAAE,KADV;AAEEC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFX;AAKEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AALR,GADK,CAAL,CAQCQ,IARD,CAQOC,GAAD,IAAO;AACX,QAAGA,GAAG,CAACC,EAAP,EACA;AACE,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,GAbD,EAcCH,IAdD,CAcOI,IAAD,IAAQ;AACZjC,IAAAA,OAAO,CAACiC,IAAD,CAAP;AACAb,IAAAA,WAAW,CAACa,IAAD,CAAX;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AACD,GAlBD;AAmBD,CAzBD;;AA2BA,SAAQhC,mBAAR,EAA6Ba,UAA7B,EAAyCK,eAAzC","sourcesContent":["import { getUser, setUser } from \"./LoginService\";\r\n\r\nconst isMilestoneAchieved = (usr,projectId,milestone)=>{\r\n  const userProjectIds = usr.projectsEnrolled.map((p)=>(p.projectId))\r\n  if(!userProjectIds.includes(projectId))\r\n    return false;\r\n  const currentProject = usr.projectsEnrolled.filter((p)=>(p.projectId==projectId))[0]\r\n  return currentProject.milestonesAchieved.includes(milestone.name)\r\n\r\n}\r\n\r\nconst isEnrolled = (usr,id) => {\r\n  console.log\r\n  const projectIds = usr.projectsEnrolled.map((p)=>p.projectId)\r\n  return projectIds.includes(id)\r\n}\r\n\r\nconst enrollToProject = (id, updateState)=>{\r\n  const user = getUser()\r\n  user.projectsEnrolled.push({\r\n    projectId: id,\r\n    milestonesAchieved: []\r\n  })\r\n  fetch(\"http://localhost:8000/users/\"+user.id,\r\n  {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n  .then((res)=>{\r\n    if(res.ok)\r\n    {\r\n      return res.json()\r\n    }\r\n  })\r\n  .then((data)=>{\r\n    setUser(data)\r\n    updateState(data)\r\n    console.log(data)\r\n  })\r\n}\r\n\r\nexport {isMilestoneAchieved, isEnrolled, enrollToProject}"]},"metadata":{},"sourceType":"module"}