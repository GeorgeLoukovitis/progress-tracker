{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\Frontend\\\\src\\\\components\\\\MyAchievements.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Button, Card, CardContent, CssBaseline, Drawer, List, ListItem, ListItemText, ListSubheader, Stack } from '@mui/material';\nimport MyAppBar from './MyAppBar';\nimport SideMenu from './SideMenu';\nimport { getToken, getUser, refresh } from '../utilities/LoginService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyAchievements = () => {\n  _s();\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawer(!isDrawerOpen);\n  };\n\n  const navigate = useNavigate();\n  const [user, setLocalUser] = useState(getUser());\n  const [achievements, setAchievements] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  useEffect(() => {\n    refresh(setLocalUser);\n    fetch(\"http://localhost:8000/achievements\", {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error(res.statusText);\n      }\n    }).then(data => {\n      console.log(\"Achievements\");\n      console.log(data);\n      setAchievements(data);\n    }).catch(err => {\n      console.log(err.message);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyAppBar, {\n      title: \"My Achievements\",\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: isDrawerOpen,\n      onClose: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(List, {\n            subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"My Achievements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this),\n            children: achievements.map(achievement => /*#__PURE__*/_jsxDEV(ListItem, {\n              secondaryAction: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    if (achievement.cardanoTx) {\n                      window.open(\"https://preprod.cexplorer.io/tx/\" + achievement.cardanoTx + \"/metadata#data\", '_blank');\n                    }\n                  },\n                  children: \"Show In Explorer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: achievement.milestoneName,\n                secondary: achievement.data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, achievement._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyAchievements, \"r/aomp3WgUqqNxvKcC/jN+L9ND4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MyAchievements;\nexport default MyAchievements;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyAchievements\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/Frontend/src/components/MyAchievements.js"],"names":["React","useState","useEffect","useNavigate","Box","Button","Card","CardContent","CssBaseline","Drawer","List","ListItem","ListItemText","ListSubheader","Stack","MyAppBar","SideMenu","getToken","getUser","refresh","MyAchievements","isDrawerOpen","setDrawer","toggleDrawer","navigate","user","setLocalUser","achievements","setAchievements","errorMessage","setErrorMessage","fetch","mode","method","headers","then","res","ok","json","Error","statusText","data","console","log","catch","err","message","margin","display","flexDirection","alignItems","width","map","achievement","cardanoTx","window","open","milestoneName","_id"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {Box, Button, Card, CardContent, CssBaseline, Drawer, List, ListItem, ListItemText, ListSubheader, Stack } from '@mui/material';\r\nimport MyAppBar from './MyAppBar'\r\nimport SideMenu from './SideMenu';\r\nimport { getToken, getUser, refresh } from '../utilities/LoginService';\r\n\r\nconst MyAchievements = () => {\r\n\r\n  const [isDrawerOpen, setDrawer] = useState(false);\r\n  const toggleDrawer = ()=>{\r\n    setDrawer(!isDrawerOpen)\r\n  }\r\n  const navigate = useNavigate()\r\n\r\n  const [user, setLocalUser] = useState(getUser())\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\")\r\n\r\n  useEffect(()=>{\r\n    refresh(setLocalUser)\r\n    fetch(\"http://localhost:8000/achievements\",\r\n    {\r\n      mode: \"cors\",\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-access-token\": getToken(), \r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      },\r\n    })\r\n    .then((res)=>{\r\n      if(res.ok)\r\n      {\r\n        return res.json()\r\n      }\r\n      else\r\n      {\r\n        throw Error(res.statusText)\r\n      }\r\n      \r\n    })\r\n    .then((data)=>{\r\n      console.log(\"Achievements\")\r\n      console.log(data)\r\n      setAchievements(data)\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err.message)\r\n      \r\n    })\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline></CssBaseline>\r\n      <MyAppBar title=\"My Achievements\" toggleDrawer={toggleDrawer}></MyAppBar>\r\n      <Drawer\r\n        anchor={\"left\"}\r\n        open={isDrawerOpen}\r\n        onClose={toggleDrawer}\r\n      >\r\n        <SideMenu></SideMenu>\r\n      </Drawer>\r\n      <Box sx={{margin: 4,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center', \r\n      }}>\r\n        <Card sx={{width:500}}>\r\n          <CardContent>\r\n            <List subheader={\r\n              <ListSubheader>My Achievements</ListSubheader>\r\n            }>\r\n              {\r\n                achievements.map((achievement)=>(\r\n                  <ListItem key={achievement._id} secondaryAction={(\r\n                    <Stack direction=\"row\">\r\n                      <Button onClick={()=>{\r\n                        if(achievement.cardanoTx)\r\n                        {\r\n                          window.open(\"https://preprod.cexplorer.io/tx/\"+achievement.cardanoTx+\"/metadata#data\", '_blank');\r\n                        }\r\n                      }}>Show In Explorer</Button>\r\n                    </Stack>\r\n                  )}>\r\n                    <ListItemText primary={achievement.milestoneName} secondary={achievement.data}></ListItemText>\r\n                  </ListItem>\r\n                ))\r\n              }\r\n            </List>\r\n          </CardContent>\r\n          \r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyAchievements"]},"metadata":{},"sourceType":"module"}