{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\src\\\\components\\\\AllProjects.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport MyAppBar from './MyAppBar';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Drawer from '@mui/material/Drawer';\nimport AddIcon from '@mui/icons-material/Add';\nimport { Box, Card, CardContent, CssBaseline, List, ListItem, ListItemText, ListSubheader, Stack, TextField } from '@mui/material';\nimport SideMenu from './SideMenu';\nimport { enrollToProject, isEnrolled } from '../utilities/ProjectService';\nimport { getUser, setUser, refresh, logout } from '../utilities/LoginService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllProjects = _ref => {\n  _s();\n\n  let {\n    logoutFun\n  } = _ref;\n  const [isDrawerOpen, setDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawer(!isDrawerOpen);\n  };\n\n  const navigate = useNavigate();\n  refresh();\n  const [user, setLocalUser] = useState(getUser());\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects\").then(res => res.json()).then(data => {\n      if (data !== null) {\n        setProjects(data);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyAppBar, {\n      title: \"Select Project\",\n      logoutFun: logoutFun,\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: isDrawerOpen,\n      onClose: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            fullWidth: true,\n            id: \"Search Bar\",\n            label: \"Search\",\n            name: \"search-bar\",\n            value: searchTerm,\n            onChange: e => {\n              setSearchTerm(e.target.value);\n            },\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"All projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this),\n            children: projects.filter(project => project.title.includes(searchTerm)).map(project => /*#__PURE__*/_jsxDEV(ListItem, {\n              secondaryAction: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => {\n                    navigate(\"/projects/\" + project.id);\n                  },\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: isEnrolled(user, project.id) ? \"contained\" : \"outlined\",\n                  color: \"success\",\n                  disabled: isEnrolled(user, project.id),\n                  onClick: () => {\n                    enrollToProject(project, setLocalUser);\n                  },\n                  children: isEnrolled(user, project.id) ? \"Enrolled\" : \"Enroll\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)\n            }, project.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              navigate(\"/\");\n            },\n            variant: \"contained\",\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllProjects, \"Ek+WvD9qG9MxxpG8nHmyh9BouJE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AllProjects;\nexport default AllProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProjects\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/src/components/AllProjects.js"],"names":["React","useState","useEffect","Link","useNavigate","MyAppBar","Button","Container","Drawer","AddIcon","Box","Card","CardContent","CssBaseline","List","ListItem","ListItemText","ListSubheader","Stack","TextField","SideMenu","enrollToProject","isEnrolled","getUser","setUser","refresh","logout","AllProjects","logoutFun","isDrawerOpen","setDrawer","toggleDrawer","navigate","user","setLocalUser","searchTerm","setSearchTerm","projects","setProjects","fetch","then","res","json","data","margin","display","flexDirection","alignItems","width","e","target","value","filter","project","title","includes","map","id"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport { Link, useNavigate } from \"react-router-dom\";\nimport MyAppBar from './MyAppBar'\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Drawer from '@mui/material/Drawer';\nimport AddIcon from '@mui/icons-material/Add';\nimport {Box, Card, CardContent, CssBaseline, List, ListItem, ListItemText, ListSubheader, Stack, TextField } from '@mui/material';\nimport SideMenu from './SideMenu';\nimport { enrollToProject, isEnrolled } from '../utilities/ProjectService';\nimport { getUser, setUser, refresh, logout} from '../utilities/LoginService';\n\nconst AllProjects = ({logoutFun}) => {\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n  const toggleDrawer = ()=>{\n    setDrawer(!isDrawerOpen)\n  }\n  const navigate = useNavigate()\n  refresh()\n  const [user, setLocalUser] = useState(getUser())\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [projects, setProjects] = useState([]);\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects\")\n    .then((res)=>res.json())\n    .then((data)=>{\n      if(data !== null)\n      {\n        setProjects(data)\n      }\n    })\n  },[])\n\n  return (\n    <div>\n      <CssBaseline></CssBaseline>\n      <MyAppBar title=\"Select Project\" logoutFun={logoutFun} toggleDrawer={toggleDrawer}></MyAppBar>\n      <Drawer\n        anchor={\"left\"}\n        open={isDrawerOpen}\n        onClose={toggleDrawer}\n      >\n        <SideMenu></SideMenu>\n      </Drawer>\n      <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n      }}>\n        <Card sx={{width:500}}>\n          <CardContent>\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"Search Bar\"\n              label=\"Search\"\n              name=\"search-bar\"\n              value = {searchTerm}\n              onChange={(e)=>{setSearchTerm(e.target.value)}}\n              autoFocus\n            />\n            <List subheader={\n              <ListSubheader>All projects</ListSubheader>\n            }>\n              {\n                projects.filter((project)=>(project.title.includes(searchTerm))).map((project)=>(\n                  <ListItem key={project.id} secondaryAction={(\n                    <Stack direction=\"row\" spacing={1}>\n                      <Button variant=\"outlined\" onClick={()=>{navigate(\"/projects/\"+project.id)}}>Details</Button>\n                      <Button variant={(isEnrolled(user, project.id))?\"contained\":\"outlined\"} color='success' disabled={isEnrolled(user,project.id)} onClick={()=>{enrollToProject(project, setLocalUser)}}>{(isEnrolled(user,project.id))?\"Enrolled\":\"Enroll\"}</Button>\n                    </Stack>\n                  )}>\n                    <ListItemText primary={project.title}></ListItemText>\n                  </ListItem>\n                ))\n              }\n            </List>\n            \n            <Button onClick={()=>{navigate(\"/\")}} variant=\"contained\">Back</Button>\n          </CardContent>\n          \n        </Card>\n      </Box>\n    </div>\n  )\n}\n\nexport default AllProjects"]},"metadata":{},"sourceType":"module"}