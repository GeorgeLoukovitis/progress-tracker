{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\src\\\\components\\\\NewProjectForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Divider, IconButton, List, ListItem, ListItemText, ListSubheader, Stack, TextField, Typography } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { getUser } from '../utilities/LoginService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SetTitle = _ref => {\n  _s();\n\n  let {\n    setProjectTitle,\n    nextStage\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Create a new Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Project Title\",\n        label: \"Project Title\",\n        name: \"title\",\n        autoComplete: \"Title 1\",\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setProjectTitle(title);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SetTitle, \"1GNs5BG/zBCkOIT6WAuxDpPLhMw=\");\n\n_c = SetTitle;\n\nconst SetAdmins = _ref2 => {\n  _s2();\n\n  let {\n    setProjectAdmins,\n    nextStage,\n    previousStage,\n    creator\n  } = _ref2;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [admins, setAdmins] = useState([creator]);\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/users\").then(res => res.json()).then(data => {\n      data = data.filter(s => s.id !== creator.id);\n      setSuggestions(data);\n    });\n  }, [creator]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select project administrators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: suggestions.filter(val => val.username.includes(searchTerm)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setAdmins([...admins, val]);\n              setSuggestions(suggestions.filter(suggestion => suggestion.id !== val.id));\n            },\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val.username,\n            secondary: \"#\" + val.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, val.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: admins.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setSuggestions([...suggestions, val]);\n              setAdmins(admins.filter(admin => admin.id !== val.id));\n            },\n            children: /*#__PURE__*/_jsxDEV(RemoveIcon, {\n              sx: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val.username,\n            secondary: \"#\" + val.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, val.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setProjectAdmins(admins);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SetAdmins, \"eKDnWVG5TuUocIJErhgUtXkvuQE=\");\n\n_c2 = SetAdmins;\n\nconst MilestoneForm = _ref3 => {\n  _s3();\n\n  let {\n    otherMilestones,\n    setToggle,\n    setMilestones\n  } = _ref3;\n  const [milestoneName, setMilestoneName] = useState(\"\");\n  const [milestoneRequired, setMilestoneRequired] = useState(false);\n  const [milestonePrerequisites, setMilestonePrerequisites] = useState([]);\n\n  const saveMilestone = () => {\n    const milestone = {\n      name: milestoneName,\n      required: milestoneRequired,\n      prerequisites: milestonePrerequisites\n    };\n\n    if (otherMilestones.map(m => m.name).includes(milestone.name)) {\n      console.log(\"Already Exists\");\n      return false;\n    }\n\n    setMilestones([...otherMilestones, milestone]);\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"New Milestone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"name\",\n        label: \"Milestone Name\",\n        name: \"name\",\n        autoFocus: true,\n        value: milestoneName,\n        onChange: e => {\n          setMilestoneName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: milestoneRequired ? \"contained\" : \"outlined\",\n        onClick: () => {\n          setMilestoneRequired(!milestoneRequired);\n        },\n        children: \"Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n          component: \"div\",\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this),\n        children: otherMilestones.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: milestonePrerequisites.includes(val.name),\n            onChange: () => {\n              if (milestonePrerequisites.includes(val.id)) {\n                setMilestonePrerequisites(milestonePrerequisites.filter(prerequisite => prerequisite !== val.name));\n              } else {\n                setMilestonePrerequisites([...milestonePrerequisites, val.name]);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, val.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setToggle(false);\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          if (saveMilestone()) setToggle(false);\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(MilestoneForm, \"UqSoFM7OVd0wU/q6dFQD97S61uU=\");\n\n_c3 = MilestoneForm;\n\nconst SetMilestones = _ref4 => {\n  _s4();\n\n  let {\n    setProjectMilestones,\n    nextStage,\n    previousStage\n  } = _ref4;\n  const [milestones, setMilestones] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  return !toggle ? /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Create Milestones for the Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"outlined\",\n        sx: {\n          mt: 2\n        },\n        onClick: () => setToggle(true),\n        children: \" Add Milestone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: milestones.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setMilestones(milestones.filter(milestone => milestone.name !== val.name));\n            },\n            children: /*#__PURE__*/_jsxDEV(RemoveIcon, {\n              sx: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val.name,\n            secondary: val.required ? \"Required\" : \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, val.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setProjectMilestones(milestones);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(MilestoneForm, {\n    otherMilestones: milestones,\n    setToggle: setToggle,\n    setMilestones: setMilestones\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(SetMilestones, \"dn3ttDeNyeyjDYs5ktyww2Yvsz8=\");\n\n_c4 = SetMilestones;\n\nconst Preview = _ref5 => {\n  _s5();\n\n  let {\n    title,\n    admins,\n    milestones,\n    previousStage,\n    creator\n  } = _ref5;\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"space-evenly\",\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            component: \"div\",\n            children: \"Admins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this),\n          children: admins.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n            divider: \"true\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.username,\n              secondary: \"#\" + val.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)\n          }, val.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            component: \"div\",\n            children: \"Milestones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this),\n          children: milestones.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n            divider: \"true\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.name,\n              secondary: val.required ? \"Required\" : \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)\n          }, val.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          const project = {\n            title,\n            admins,\n            milestones,\n            creator,\n            date: Date.now()\n          };\n          console.log(project);\n          fetch(\"http://localhost:8000/projects\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(project)\n          }).then(res => {\n            if (res.ok) {\n              return res.json();\n            }\n          }).then(data => {\n            console.log(\"Response\");\n            console.log(data);\n            navigate(\"/\");\n          });\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n\n_s5(Preview, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c5 = Preview;\n\nconst NewProjectForm = () => {\n  _s6();\n\n  const [user, setLocalUser] = user;\n  const [stage, setStage] = useState(0);\n\n  const nextStage = () => {\n    setStage(stage + 1);\n  };\n\n  const previousStage = () => {\n    setStage(stage - 1);\n  };\n\n  const showForm = s => {\n    if (s === 0) return /*#__PURE__*/_jsxDEV(SetTitle, {\n      setProjectTitle: setProjectTitle,\n      nextStage: nextStage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 15\n    }, this);else if (s === 1) return /*#__PURE__*/_jsxDEV(SetAdmins, {\n      setProjectAdmins: setProjectAdmins,\n      nextStage: nextStage,\n      previousStage: previousStage,\n      creator: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 15\n    }, this);else if (s === 2) return /*#__PURE__*/_jsxDEV(SetMilestones, {\n      setProjectMilestones: setProjectMilestones,\n      nextStage: nextStage,\n      previousStage: previousStage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }, this);else if (s === 3) return /*#__PURE__*/_jsxDEV(Preview, {\n      title: projectTitle,\n      admins: projectAdmins,\n      milestones: projectMilestones,\n      previousStage: previousStage,\n      creator: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }, this);\n  };\n\n  const [projectTitle, setProjectTitle] = useState(\"\");\n  const [projectAdmins, setProjectAdmins] = useState([]);\n  const [projectMilestones, setProjectMilestones] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: showForm(stage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n};\n\n_s6(NewProjectForm, \"9mJ4ZeIC0vCM/R5tBilVwRSAFe8=\");\n\n_c6 = NewProjectForm;\nexport default NewProjectForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SetTitle\");\n$RefreshReg$(_c2, \"SetAdmins\");\n$RefreshReg$(_c3, \"MilestoneForm\");\n$RefreshReg$(_c4, \"SetMilestones\");\n$RefreshReg$(_c5, \"Preview\");\n$RefreshReg$(_c6, \"NewProjectForm\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/src/components/NewProjectForm.js"],"names":["React","useEffect","useState","useNavigate","Box","Button","Card","CardActions","CardContent","Checkbox","CssBaseline","Divider","IconButton","List","ListItem","ListItemText","ListSubheader","Stack","TextField","Typography","AddIcon","RemoveIcon","getUser","SetTitle","setProjectTitle","nextStage","title","setTitle","width","e","target","value","mb","SetAdmins","setProjectAdmins","previousStage","creator","searchTerm","setSearchTerm","admins","setAdmins","suggestions","setSuggestions","fetch","then","res","json","data","filter","s","id","val","username","includes","map","suggestion","admin","color","MilestoneForm","otherMilestones","setToggle","setMilestones","milestoneName","setMilestoneName","milestoneRequired","setMilestoneRequired","milestonePrerequisites","setMilestonePrerequisites","saveMilestone","milestone","name","required","prerequisites","m","console","log","prerequisite","SetMilestones","setProjectMilestones","milestones","toggle","mt","Preview","navigate","project","date","Date","now","method","headers","body","JSON","stringify","ok","NewProjectForm","user","setLocalUser","stage","setStage","showForm","projectTitle","projectAdmins","projectMilestones","margin","display","flexDirection","alignItems"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAAQC,GAAR,EAAaC,MAAb,EAAqBC,IAArB,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqDC,QAArD,EAA+DC,WAA/D,EAA4EC,OAA5E,EAAqFC,UAArF,EAAiGC,IAAjG,EAAuGC,QAAvG,EAAiHC,YAAjH,EAA8HC,aAA9H,EAA6IC,KAA7I,EAAoJC,SAApJ,EAA+JC,UAA/J,QAAgL,eAAhL;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,OAAT,QAAwB,2BAAxB;;;AAEA,MAAMC,QAAQ,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAACC,IAAAA,eAAD;AAAkBC,IAAAA;AAAlB,GAAiC;AAEjD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAC0B,MAAAA,KAAK,EAAC;AAAP,KAAV;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AACE,QAAA,MAAM,EAAC,QADT;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,EAAE,EAAC,eAHL;AAIE,QAAA,KAAK,EAAC,eAJR;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,YAAY,EAAC,SANf;AAOE,QAAA,KAAK,EAAIF,KAPX;AAQE,QAAA,QAAQ,EAAGG,CAAD,IAAK;AAACF,UAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AAAyB,SAR3C;AASE,QAAA,SAAS;AATX;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,WAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAE;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAHN;AAIE,QAAA,OAAO,EAAE,MAAI;AACXR,UAAAA,eAAe,CAACE,KAAD,CAAf;AACAD,UAAAA,SAAS;AACV,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CAtCD;;GAAMF,Q;;KAAAA,Q;;AAwCN,MAAMU,SAAS,GAAG,SAA2D;AAAA;;AAAA,MAA1D;AAACC,IAAAA,gBAAD;AAAmBT,IAAAA,SAAnB;AAA8BU,IAAAA,aAA9B;AAA6CC,IAAAA;AAA7C,GAA0D;AAE3E,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BpC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqC,MAAD,EAASC,SAAT,IAAsBtC,QAAQ,CAAC,CAACkC,OAAD,CAAD,CAApC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCxC,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ0C,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAAOA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,IAAD,IAAQ;AACZA,MAAAA,IAAI,GAAGA,IAAI,CAACC,MAAL,CAAYC,CAAC,IAAEA,CAAC,CAACC,EAAF,KAAOd,OAAO,CAACc,EAA9B,CAAP;AACAR,MAAAA,cAAc,CAACK,IAAD,CAAd;AACD,KALH;AAMD,GAPQ,EAON,CAACX,OAAD,CAPM,CAAT;AASA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAACR,MAAAA,KAAK,EAAC;AAAP,KAAV;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AACE,QAAA,MAAM,EAAC,QADT;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,EAAE,EAAC,YAHL;AAIE,QAAA,KAAK,EAAC,QAJR;AAKE,QAAA,IAAI,EAAC,YALP;AAME,QAAA,KAAK,EAAIS,UANX;AAOE,QAAA,QAAQ,EAAGR,CAAD,IAAK;AAACS,UAAAA,aAAa,CAACT,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAA8B,SAPhD;AAQE,QAAA,SAAS;AARX;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE,QAAC,IAAD;AAAA,kBACGU,WAAW,CAACO,MAAZ,CAAoBG,GAAD,IAAQA,GAAG,CAACC,QAAJ,CAAaC,QAAb,CAAsBhB,UAAtB,CAA3B,EAA+DiB,GAA/D,CAAoEH,GAAG,iBACtE,QAAC,QAAD;AAAuB,UAAA,eAAe,eACpC,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAI;AACvBX,cAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYY,GAAZ,CAAD,CAAT;AACAT,cAAAA,cAAc,CAACD,WAAW,CAACO,MAAZ,CAAoBO,UAAD,IAAeA,UAAU,CAACL,EAAX,KAAkBC,GAAG,CAACD,EAAxD,CAAD,CAAd;AACD,aAHD;AAAA,mCAIE,QAAC,OAAD;AAAS,cAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA,iCAQE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEC,GAAG,CAACC,QAA3B;AAAqC,YAAA,SAAS,EAAE,MAAID,GAAG,CAACD;AAAxD;AAAA;AAAA;AAAA;AAAA;AARF,WAAeC,GAAG,CAACD,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAdF,eA4BE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cA5BF,eA6BE,QAAC,IAAD;AAAA,kBACGX,MAAM,CAACe,GAAP,CAAYH,GAAG,iBACd,QAAC,QAAD;AAAuB,UAAA,eAAe,eACpC,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAI;AACvBT,cAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBU,GAAjB,CAAD,CAAd;AACAX,cAAAA,SAAS,CAACD,MAAM,CAACS,MAAP,CAAeQ,KAAD,IAAUA,KAAK,CAACN,EAAN,KAAaC,GAAG,CAACD,EAAzC,CAAD,CAAT;AACD,aAHD;AAAA,mCAIE,QAAC,UAAD;AAAY,cAAA,EAAE,EAAE;AAACO,gBAAAA,KAAK,EAAC;AAAP;AAAhB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA,iCAQE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEN,GAAG,CAACC,QAA3B;AAAqC,YAAA,SAAS,EAAE,MAAID,GAAG,CAACD;AAAxD;AAAA;AAAA;AAAA;AAAA;AARF,WAAeC,GAAG,CAACD,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA6CE,QAAC,WAAD;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAE;AAAElB,UAAAA,EAAE,EAAE;AAAN,SAHN;AAIE,QAAA,OAAO,EAAE,MAAI;AACXG,UAAAA,aAAa;AACd,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAE;AAAEH,UAAAA,EAAE,EAAE;AAAN,SAHN;AAIE,QAAA,OAAO,EAAE,MAAI;AACXE,UAAAA,gBAAgB,CAACK,MAAD,CAAhB;AACAd,UAAAA,SAAS;AACV,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwED,CAvFD;;IAAMQ,S;;MAAAA,S;;AA0FN,MAAMyB,aAAa,GAAG,SAAiD;AAAA;;AAAA,MAAhD;AAACC,IAAAA,eAAD;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,GAAgD;AAErE,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC7D,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC8D,iBAAD,EAAoBC,oBAApB,IAA4C/D,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACgE,sBAAD,EAAyBC,yBAAzB,IAAsDjE,QAAQ,CAAC,EAAD,CAApE;;AAEA,QAAMkE,aAAa,GAAG,MAAI;AACxB,UAAMC,SAAS,GAAG;AAChBC,MAAAA,IAAI,EAAER,aADU;AAEhBS,MAAAA,QAAQ,EAAEP,iBAFM;AAGhBQ,MAAAA,aAAa,EAAEN;AAHC,KAAlB;;AAKA,QAAGP,eAAe,CAACL,GAAhB,CAAoBmB,CAAC,IAAEA,CAAC,CAACH,IAAzB,EAA+BjB,QAA/B,CAAwCgB,SAAS,CAACC,IAAlD,CAAH,EACA;AACEI,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,aAAO,KAAP;AACD;;AACDd,IAAAA,aAAa,CAAC,CAAC,GAAGF,eAAJ,EAAqBU,SAArB,CAAD,CAAb;AACA,WAAO,IAAP;AACD,GAbD;;AAeA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAACzC,MAAAA,KAAK,EAAC;AAAP,KAAV;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AACE,QAAA,MAAM,EAAC,QADT;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,EAAE,EAAC,MAJL;AAKE,QAAA,KAAK,EAAC,gBALR;AAME,QAAA,IAAI,EAAC,MANP;AAOE,QAAA,SAAS,MAPX;AAQE,QAAA,KAAK,EAAEkC,aART;AASE,QAAA,QAAQ,EAAGjC,CAAD,IAAK;AAACkC,UAAAA,gBAAgB,CAAClC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAiC;AATnD;AAAA;AAAA;AAAA;AAAA,cAJF,eAeE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAGiC,iBAAD,GAAoB,WAApB,GAAgC,UAF3C;AAGE,QAAA,OAAO,EAAE,MAAI;AACXC,UAAAA,oBAAoB,CAAC,CAACD,iBAAF,CAApB;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAwBE,QAAC,IAAD;AAAM,QAAA,SAAS,eACb,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA,kBAKGL,eAAe,CAACL,GAAhB,CAAqBH,GAAG,iBACvB,QAAC,QAAD;AAAuB,UAAA,eAAe,eACpC,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEe,sBAAsB,CAACb,QAAvB,CAAgCF,GAAG,CAACmB,IAApC,CAAjB;AAA4D,YAAA,QAAQ,EAAE,MAAI;AACtE,kBAAGJ,sBAAsB,CAACb,QAAvB,CAAgCF,GAAG,CAACD,EAApC,CAAH,EACA;AACEiB,gBAAAA,yBAAyB,CAACD,sBAAsB,CAAClB,MAAvB,CAA+B4B,YAAD,IAAiBA,YAAY,KAAKzB,GAAG,CAACmB,IAApE,CAAD,CAAzB;AACD,eAHD,MAKA;AACEH,gBAAAA,yBAAyB,CAAC,CAAC,GAAGD,sBAAJ,EAA4Bf,GAAG,CAACmB,IAAhC,CAAD,CAAzB;AACD;AACF;AATH;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA,iCAaE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEnB,GAAG,CAACmB;AAA3B;AAAA;AAAA;AAAA;AAAA;AAbF,WAAenB,GAAG,CAACD,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AALH;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiDE,QAAC,WAAD;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAE;AAAElB,UAAAA,EAAE,EAAE;AAAN,SAHN;AAIE,QAAA,OAAO,EAAE,MAAI;AACX4B,UAAAA,SAAS,CAAC,KAAD,CAAT;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAE;AAAE5B,UAAAA,EAAE,EAAE;AAAN,SAHN;AAIE,QAAA,OAAO,EAAE,MAAI;AACX,cAAGoC,aAAa,EAAhB,EACER,SAAS,CAAC,KAAD,CAAT;AACH,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAjDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4ED,CAjGD;;IAAMF,a;;MAAAA,a;;AAqGN,MAAMmB,aAAa,GAAG,SAAsD;AAAA;;AAAA,MAArD;AAACC,IAAAA,oBAAD;AAAuBrD,IAAAA,SAAvB;AAAkCU,IAAAA;AAAlC,GAAqD;AAC1E,QAAM,CAAC4C,UAAD,EAAalB,aAAb,IAA8B3D,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC8E,MAAD,EAASpB,SAAT,IAAsB1D,QAAQ,CAAC,KAAD,CAApC;AACA,SACG,CAAC8E,MAAF,gBACA,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAACpD,MAAAA,KAAK,EAAC;AAAP,KAAV;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AAAQ,QAAA,SAAS,MAAjB;AAAkB,QAAA,OAAO,EAAC,UAA1B;AAAqC,QAAA,EAAE,EAAE;AAACqD,UAAAA,EAAE,EAAC;AAAJ,SAAzC;AAAiD,QAAA,OAAO,EAAE,MAAIrB,SAAS,CAAC,IAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD;AAAA,kBACGmB,UAAU,CAACzB,GAAX,CAAgBH,GAAG,iBAClB,QAAC,QAAD;AAAyB,UAAA,eAAe,eACtC,QAAC,UAAD;AAAY,YAAA,OAAO,EAAE,MAAI;AACvBU,cAAAA,aAAa,CAACkB,UAAU,CAAC/B,MAAX,CAAmBqB,SAAD,IAAcA,SAAS,CAACC,IAAV,KAAmBnB,GAAG,CAACmB,IAAvD,CAAD,CAAb;AACD,aAFD;AAAA,mCAGE,QAAC,UAAD;AAAY,cAAA,EAAE,EAAE;AAACb,gBAAAA,KAAK,EAAC;AAAP;AAAhB;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA,iCAOE,QAAC,YAAD;AAAc,YAAA,OAAO,EAAEN,GAAG,CAACmB,IAA3B;AAAiC,YAAA,SAAS,EAAGnB,GAAG,CAACoB,QAAL,GAAe,UAAf,GAA0B;AAAtE;AAAA;AAAA;AAAA;AAAA;AAPF,WAAepB,GAAG,CAACmB,IAAnB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,WAAD;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAE;AAAEtC,UAAAA,EAAE,EAAE;AAAN,SAHN;AAIE,QAAA,OAAO,EAAE,MAAI;AACXG,UAAAA,aAAa;AACd,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAE;AAAEH,UAAAA,EAAE,EAAE;AAAN,SAHN;AAIE,QAAA,OAAO,EAAE,MAAI;AACX8C,UAAAA,oBAAoB,CAACC,UAAD,CAApB;AACAtD,UAAAA,SAAS;AACV,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,gBA8CA,QAAC,aAAD;AAAe,IAAA,eAAe,EAAEsD,UAAhC;AAA4C,IAAA,SAAS,EAAEnB,SAAvD;AAAkE,IAAA,aAAa,EAAEC;AAAjF;AAAA;AAAA;AAAA;AAAA,UA/CF;AAiDD,CApDD;;IAAMgB,a;;MAAAA,a;;AAsDN,MAAMK,OAAO,GAAG,SAAyD;AAAA;;AAAA,MAAxD;AAACxD,IAAAA,KAAD;AAAQa,IAAAA,MAAR;AAAgBwC,IAAAA,UAAhB;AAA4B5C,IAAAA,aAA5B;AAA2CC,IAAAA;AAA3C,GAAwD;AAEvE,QAAM+C,QAAQ,GAAGhF,WAAW,EAA5B;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAACyB,MAAAA,KAAK,EAAC;AAAP,KAAV;AAAA,4BACE,QAAC,WAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,IAAtB;AAA2B,QAAA,OAAO,EAAC,IAAnC;AAAA,kBACGF;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,cAAc,EAAC,cAAtC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,eACb,QAAC,aAAD;AAAe,YAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA,oBAKGa,MAAM,CAACe,GAAP,CAAYH,GAAG,iBACd,QAAC,QAAD;AAAuB,YAAA,OAAO,EAAC,MAA/B;AAAA,mCACE,QAAC,YAAD;AAAc,cAAA,OAAO,EAAEA,GAAG,CAACC,QAA3B;AAAqC,cAAA,SAAS,EAAE,MAAID,GAAG,CAACD;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF,aAAeC,GAAG,CAACD,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADD;AALH;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,IAAD;AAAM,UAAA,SAAS,eACb,QAAC,aAAD;AAAe,YAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA,oBAKG6B,UAAU,CAACzB,GAAX,CAAgBH,GAAG,iBAClB,QAAC,QAAD;AAAyB,YAAA,OAAO,EAAC,MAAjC;AAAA,mCACE,QAAC,YAAD;AAAc,cAAA,OAAO,EAAEA,GAAG,CAACmB,IAA3B;AAAiC,cAAA,SAAS,EAAGnB,GAAG,CAACoB,QAAL,GAAe,UAAf,GAA0B;AAAtE;AAAA;AAAA;AAAA;AAAA;AADF,aAAepB,GAAG,CAACmB,IAAnB;AAAA;AAAA;AAAA;AAAA,kBADD;AALH;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA8BE,QAAC,WAAD;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAE;AAAEtC,UAAAA,EAAE,EAAE;AAAN,SAHN;AAIE,QAAA,OAAO,EAAE,MAAI;AACXG,UAAAA,aAAa;AACd,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,MAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAE;AAAEH,UAAAA,EAAE,EAAE;AAAN,SAHN;AAIE,QAAA,OAAO,EAAE,MAAI;AACX,gBAAMoD,OAAO,GAAG;AAAC1D,YAAAA,KAAD;AAAQa,YAAAA,MAAR;AAAgBwC,YAAAA,UAAhB;AAA4B3C,YAAAA,OAA5B;AAAqCiD,YAAAA,IAAI,EAAEC,IAAI,CAACC,GAAL;AAA3C,WAAhB;AACAb,UAAAA,OAAO,CAACC,GAAR,CAAYS,OAAZ;AACAzC,UAAAA,KAAK,CAAC,gCAAD,EACL;AACE6C,YAAAA,MAAM,EAAE,MADV;AAEEC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFX;AAKEC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AALR,WADK,CAAL,CAQCxC,IARD,CAQOC,GAAD,IAAO;AACX,gBAAGA,GAAG,CAACgD,EAAP,EACA;AACE,qBAAOhD,GAAG,CAACC,IAAJ,EAAP;AACD;AACF,WAbD,EAcCF,IAdD,CAcOG,IAAD,IAAQ;AACZ2B,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAY5B,IAAZ;AACAoC,YAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,WAlBD;AAoBD,SA3BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6ED,CAjFD;;IAAMD,O;UAEa/E,W;;;MAFb+E,O;;AAuFN,MAAMY,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBD,IAA7B;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBhG,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMuB,SAAS,GAAG,MAAI;AACpByE,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD,GAFD;;AAGA,QAAM9D,aAAa,GAAG,MAAI;AACxB+D,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD,GAFD;;AAIA,QAAME,QAAQ,GAAIlD,CAAD,IAAK;AACpB,QAAGA,CAAC,KAAK,CAAT,EACE,oBAAQ,QAAC,QAAD;AAAU,MAAA,eAAe,EAAIzB,eAA7B;AAA8C,MAAA,SAAS,EAAIC;AAA3D;AAAA;AAAA;AAAA;AAAA,YAAR,CADF,KAEK,IAAIwB,CAAC,KAAK,CAAV,EACH,oBAAQ,QAAC,SAAD;AAAW,MAAA,gBAAgB,EAAEf,gBAA7B;AAA+C,MAAA,SAAS,EAAIT,SAA5D;AAAuE,MAAA,aAAa,EAAIU,aAAxF;AAAuG,MAAA,OAAO,EAAI4D;AAAlH;AAAA;AAAA;AAAA;AAAA,YAAR,CADG,KAEA,IAAI9C,CAAC,KAAK,CAAV,EACH,oBAAQ,QAAC,aAAD;AAAe,MAAA,oBAAoB,EAAE6B,oBAArC;AAA2D,MAAA,SAAS,EAAIrD,SAAxE;AAAmF,MAAA,aAAa,EAAIU;AAApG;AAAA;AAAA;AAAA;AAAA,YAAR,CADG,KAEA,IAAIc,CAAC,KAAK,CAAV,EACH,oBAAQ,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEmD,YAAhB;AAA8B,MAAA,MAAM,EAAIC,aAAxC;AAAuD,MAAA,UAAU,EAAIC,iBAArE;AAAwF,MAAA,aAAa,EAAInE,aAAzG;AAAwH,MAAA,OAAO,EAAE4D;AAAjI;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GATD;;AAWA,QAAM,CAACK,YAAD,EAAe5E,eAAf,IAAkCtB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACmG,aAAD,EAAgBnE,gBAAhB,IAAoChC,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACoG,iBAAD,EAAoBxB,oBAApB,IAA4C5E,QAAQ,CAAC,EAAD,CAA1D;AAEA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAACqG,QAAAA,MAAM,EAAE,CAAT;AACCC,QAAAA,OAAO,EAAE,MADV;AAECC,QAAAA,aAAa,EAAE,QAFhB;AAGCC,QAAAA,UAAU,EAAE;AAHb,OAAT;AAAA,gBAKGP,QAAQ,CAACF,KAAD;AALX;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtCD;;IAAMH,c;;MAAAA,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useNavigate } from 'react-router';\nimport {Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Divider, IconButton, List, ListItem, ListItemText,ListSubheader, Stack, TextField, Typography} from \"@mui/material\"\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { getUser } from '../utilities/LoginService';\n\nconst SetTitle = ({setProjectTitle, nextStage}) => {\n\n  const [title, setTitle] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create a new Project\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Project Title\"\n          label=\"Project Title\"\n          name=\"title\"\n          autoComplete=\"Title 1\"\n          value = {title}\n          onChange={(e)=>{setTitle(e.target.value)}}\n          autoFocus\n        />\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setProjectTitle(title)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SetAdmins = ({setProjectAdmins, nextStage, previousStage, creator}) => {\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [admins, setAdmins] = useState([creator,])\n  const [suggestions, setSuggestions] = useState([])\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/users\")\n      .then((res)=>res.json())\n      .then((data)=>{\n        data = data.filter(s=>s.id!==creator.id)\n        setSuggestions(data)\n      })\n  }, [creator,])\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select project administrators\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        <List>\n          {suggestions.filter((val)=>(val.username.includes(searchTerm))).map((val=>(\n            <ListItem key={val.id} secondaryAction={\n              <IconButton onClick={()=>{\n                setAdmins([...admins, val])\n                setSuggestions(suggestions.filter((suggestion)=>(suggestion.id !== val.id)))\n              }}>\n                <AddIcon color='success'></AddIcon>\n              </IconButton>\n            }>\n              <ListItemText primary={val.username} secondary={\"#\"+val.id}></ListItemText>\n            </ListItem>\n          )))}\n        </List>\n        <Divider></Divider>\n        <List>\n          {admins.map((val=>(\n            <ListItem key={val.id} secondaryAction={\n              <IconButton onClick={()=>{\n                setSuggestions([...suggestions, val])\n                setAdmins(admins.filter((admin)=>(admin.id !== val.id)))\n              }}>\n                <RemoveIcon sx={{color:\"red\"}}></RemoveIcon>\n              </IconButton>\n            }>\n              <ListItemText primary={val.username} secondary={\"#\"+val.id}></ListItemText>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Back\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setProjectAdmins(admins)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\n\nconst MilestoneForm = ({otherMilestones, setToggle, setMilestones}) => {\n\n  const [milestoneName, setMilestoneName] = useState(\"\")\n  const [milestoneRequired, setMilestoneRequired] = useState(false)\n  const [milestonePrerequisites, setMilestonePrerequisites] = useState([])\n\n  const saveMilestone = ()=>{\n    const milestone = {\n      name: milestoneName,\n      required: milestoneRequired,\n      prerequisites: milestonePrerequisites\n    }\n    if(otherMilestones.map(m=>m.name).includes(milestone.name))\n    {\n      console.log(\"Already Exists\")\n      return false\n    }\n    setMilestones([...otherMilestones, milestone])\n    return true\n  }\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          New Milestone\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Milestone Name\"\n          name=\"name\"\n          autoFocus\n          value={milestoneName}\n          onChange={(e)=>{setMilestoneName(e.target.value)}}\n        />\n        <Button\n          fullWidth\n          variant={(milestoneRequired)?\"contained\":\"outlined\"}\n          onClick={()=>{\n            setMilestoneRequired(!milestoneRequired)\n          }}\n        >\n          Required\n        </Button>\n        <List subheader={\n          <ListSubheader component=\"div\">\n            Prerequisites\n          </ListSubheader>\n        }>\n          {otherMilestones.map((val=>(\n            <ListItem key={val.id} secondaryAction={\n              <Checkbox value={milestonePrerequisites.includes(val.name)} onChange={()=>{\n                  if(milestonePrerequisites.includes(val.id))\n                  {\n                    setMilestonePrerequisites(milestonePrerequisites.filter((prerequisite)=>(prerequisite !== val.name)))\n                  }\n                  else\n                  {\n                    setMilestonePrerequisites([...milestonePrerequisites, val.name])\n                  }\n                }\n              }></Checkbox>\n            }>\n              <ListItemText primary={val.name}></ListItemText>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setToggle(false)\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            if(saveMilestone())\n              setToggle(false)\n          }}\n        >\n          Save\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\n\n\nconst SetMilestones = ({setProjectMilestones, nextStage, previousStage}) => {\n  const [milestones, setMilestones] = useState([])\n  const [toggle, setToggle] = useState(false)\n  return (\n    (!toggle)?\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create Milestones for the Project\n        </Typography>\n        <Button fullWidth variant='outlined' sx={{mt:2}} onClick={()=>setToggle(true)}> Add Milestone</Button>\n        <List>\n          {milestones.map((val=>(\n            <ListItem key={val.name} secondaryAction={\n              <IconButton onClick={()=>{\n                setMilestones(milestones.filter((milestone)=>(milestone.name !== val.name)))\n              }}>\n                <RemoveIcon sx={{color:\"red\"}}></RemoveIcon>\n              </IconButton>\n            }>\n              <ListItemText primary={val.name} secondary={(val.required)?\"Required\":\"Optional\"}></ListItemText>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setProjectMilestones(milestones)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>:\n    <MilestoneForm otherMilestones={milestones} setToggle={setToggle} setMilestones={setMilestones}></MilestoneForm>\n  )\n}\n\nconst Preview = ({title, admins, milestones, previousStage, creator}) => {\n\n  const navigate = useNavigate();\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          {title}\n        </Typography>\n        <Stack direction=\"row\" justifyContent=\"space-evenly\">\n          <List subheader={\n            <ListSubheader component=\"div\">\n              Admins\n            </ListSubheader>\n          }>\n            {admins.map((val=>(\n              <ListItem key={val.id} divider=\"true\">\n                <ListItemText primary={val.username} secondary={\"#\"+val.id}></ListItemText>\n              </ListItem>\n            )))}\n          </List>\n          <List subheader={\n            <ListSubheader component=\"div\">\n              Milestones\n            </ListSubheader>\n          }>\n            {milestones.map((val=>(\n              <ListItem key={val.name} divider=\"true\">\n                <ListItemText primary={val.name} secondary={(val.required)?\"Required\":\"Optional\"}></ListItemText>\n              </ListItem>\n            )))}\n          </List>\n        </Stack>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            const project = {title, admins, milestones, creator, date: Date.now()}\n            console.log(project)\n            fetch(\"http://localhost:8000/projects\",\n            {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(project)\n            })\n            .then((res)=>{\n              if(res.ok)\n              {\n                return res.json()\n              }\n            })\n            .then((data)=>{\n              console.log(\"Response\")\n              console.log(data)\n              navigate(\"/\")\n            })\n\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\n\n\n\n\nconst NewProjectForm = () => {\n\n  const [user, setLocalUser] = user\n  const [stage, setStage] = useState(0);\n  const nextStage = ()=>{\n    setStage(stage+1);\n  }\n  const previousStage = ()=>{\n    setStage(stage-1);\n  }\n\n  const showForm = (s)=>{\n    if(s === 0)\n      return (<SetTitle setProjectTitle = {setProjectTitle} nextStage = {nextStage}></SetTitle>)\n    else if (s === 1)\n      return (<SetAdmins setProjectAdmins={setProjectAdmins} nextStage = {nextStage} previousStage = {previousStage} creator = {user}></SetAdmins>)\n    else if (s === 2)\n      return (<SetMilestones setProjectMilestones={setProjectMilestones} nextStage = {nextStage} previousStage = {previousStage}></SetMilestones>)\n    else if (s === 3)\n      return (<Preview title={projectTitle} admins = {projectAdmins} milestones = {projectMilestones} previousStage = {previousStage} creator={user}></Preview>)\n  }\n\n  const [projectTitle, setProjectTitle] = useState(\"\")\n  const [projectAdmins, setProjectAdmins] = useState([])\n  const [projectMilestones, setProjectMilestones] = useState([])\n\n  return (\n    <div>\n      <CssBaseline></CssBaseline>\n      <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n              }}>\n        {showForm(stage)}\n      </Box>\n    </div>\n  )\n}\n\nexport default NewProjectForm"]},"metadata":{},"sourceType":"module"}