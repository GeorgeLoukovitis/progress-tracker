{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\src\\\\components\\\\AwardMilestones.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectMilestone = _ref => {\n  _s();\n\n  let {\n    nextStage,\n    setMilestoneToAward,\n    projectId\n  } = _ref;\n  const [project, setProject] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects/\" + projectId).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      setProject(data);\n    });\n  }, []);\n  const navigate = useNavigate();\n  const [milestone, setMilestone] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select Milestone To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), project ? /*#__PURE__*/_jsxDEV(List, {\n        children: project.milestones.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: milestone == val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              setMilestone(val.name);\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.name,\n              secondary: val.required ? \"Required\" : \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, val.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/manage-projects\");\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setMilestoneToAward(milestone);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectMilestone, \"maQ3o6fHrBHmlt+j4uC1G4CRGbg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SelectMilestone;\n\nconst SelectUser = _ref2 => {\n  _s2();\n\n  let {\n    previousStage,\n    nextStage,\n    setUserIds\n  } = _ref2;\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/users/\").then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      // console.log(data)\n      setUsers(data);\n    });\n  }, []);\n  const [usersToAward, setUsersToAward] = useState([]);\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select Users To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: users.filter(u => u.username.includes(searchTerm)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: usersToAward.includes(val.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              if (usersToAward.includes(val.id)) {\n                console.log(\"Remove\");\n                setUsersToAward(usersToAward.filter(u => u != val.id));\n              } else {\n                console.log(\"Add\");\n                setUsersToAward([...usersToAward, val.id]);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.username,\n              secondary: \"#\" + val.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, val.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setUserIds(usersToAward);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SelectUser, \"5MHNw7XepIddGjPpZWmffCnU0W8=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = SelectUser;\n\nconst SuccessScreen = () => {\n  _s3();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Milestoned Awarded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/\");\n        },\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(SuccessScreen, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c3 = SuccessScreen;\n\nconst AwardMilestones = () => {\n  _s4();\n\n  const {\n    projectId\n  } = useParams();\n  const [stage, setStage] = useState(0);\n\n  const nextStage = () => {\n    setStage(stage + 1);\n  };\n\n  const previousStage = () => {\n    setStage(stage - 1);\n  };\n\n  const awardUsers = () => {\n    for (const userId of userIds) {\n      fetch(\"http://localhost:8000/users/\" + userId).then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      }).then(data => {\n        var i = 0;\n\n        while (i < data.projectsEnrolled.length) {\n          if (data.projectsEnrolled[i].id == projectId) {\n            data.projectsEnrolled[i].milestonesAchieved.push(milestoneToAward);\n            break;\n          }\n        }\n\n        fetch(\"http://localhost:8000/users/\" + userId, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        }).then(res1 => {\n          if (res1.ok) {\n            return res1.json();\n          }\n        }).then(data1 => {\n          console.log(data1);\n        });\n      });\n    }\n  };\n\n  const [userIds, setUserIds] = useState([]);\n  const [milestoneToAward, setMilestoneToAward] = useState(\"\");\n\n  const showForm = (s, previousStage, nextStage, setMilestoneToAward) => {\n    if (s === 0) return /*#__PURE__*/_jsxDEV(SelectMilestone, {\n      nextStage: nextStage,\n      setMilestoneToAward: setMilestoneToAward,\n      projectId: projectId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }, this);else if (s === 1) return /*#__PURE__*/_jsxDEV(SelectUser, {\n      previousStage: previousStage,\n      nextStage: nextStage,\n      setUserIds: setUserIds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }, this);else if (s === 2) {\n      awardUsers();\n      return /*#__PURE__*/_jsxDEV(SuccessScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: showForm(stage, previousStage, nextStage, setMilestoneToAward)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(AwardMilestones, \"pRQ7oqIgpkIT3bL+DKsC/lhr814=\", false, function () {\n  return [useParams];\n});\n\n_c4 = AwardMilestones;\nexport default AwardMilestones;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SelectMilestone\");\n$RefreshReg$(_c2, \"SelectUser\");\n$RefreshReg$(_c3, \"SuccessScreen\");\n$RefreshReg$(_c4, \"AwardMilestones\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/src/components/AwardMilestones.js"],"names":["Avatar","Box","Button","Card","CardActions","CardContent","Checkbox","CssBaseline","List","ListItem","ListItemButton","ListItemText","TextField","Typography","React","useEffect","useState","useNavigate","useParams","DoneIcon","SelectMilestone","nextStage","setMilestoneToAward","projectId","project","setProject","fetch","then","res","ok","json","data","navigate","milestone","setMilestone","width","milestones","map","val","name","required","mb","SelectUser","previousStage","setUserIds","users","setUsers","usersToAward","setUsersToAward","searchTerm","setSearchTerm","e","target","value","filter","u","username","includes","id","console","log","SuccessScreen","m","bgcolor","AwardMilestones","stage","setStage","awardUsers","userId","userIds","i","projectsEnrolled","length","milestonesAchieved","push","milestoneToAward","method","headers","body","JSON","stringify","res1","data1","showForm","s","margin","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import {Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport DoneIcon from '@mui/icons-material/Done';\n\n\nconst SelectMilestone = ({nextStage, setMilestoneToAward, projectId}) => {\n\n  const [project, setProject] = useState(null)\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects/\"+projectId)\n      .then((res)=>{\n        if(res.ok)\n        {\n          return res.json()\n        }\n      })\n      .then((data)=>{\n        setProject(data)\n      })\n  },[])\n  \n  const navigate = useNavigate()\n  const [milestone, setMilestone] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select Milestone To Award\n        </Typography>\n        {(project)?\n        <List>\n          {project.milestones.map((val=>(\n            <ListItem key={val.name} secondaryAction={\n              <Checkbox checked={milestone==val.name}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{setMilestone(val.name)}}>\n                <ListItemText primary={val.name} secondary={(val.required)?\"Required\":\"Optional\"}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>:\n        <div></div>}\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/manage-projects\")\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setMilestoneToAward(milestone)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SelectUser = ({previousStage, nextStage, setUserIds})=> {\n  const [users, setUsers] = useState([])\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/users/\")\n      .then((res)=>{\n        if(res.ok)\n        {\n          return res.json()\n        }\n      })\n      .then((data)=>{\n        // console.log(data)\n        setUsers(data)\n      })\n  },[])\n  \n  const [usersToAward, setUsersToAward] = useState([]) \n  const navigate = useNavigate()\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select Users To Award\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        <List>\n          {users.filter((u)=>(u.username.includes(searchTerm))).map((val=>(\n            <ListItem key={val.id} secondaryAction={\n              <Checkbox checked={usersToAward.includes(val.id)}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{\n                if(usersToAward.includes(val.id))\n                {\n                  console.log(\"Remove\")\n                  setUsersToAward(usersToAward.filter(u=>(u!=val.id)))\n                }\n                else\n                {\n                  console.log(\"Add\")\n                  setUsersToAward([...usersToAward, val.id])\n                }\n              }}>\n                <ListItemText primary={val.username} secondary={\"#\"+val.id}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setUserIds(usersToAward)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SuccessScreen = () => {\n\n  const navigate = useNavigate()\n  \n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Milestoned Awarded\n        </Typography>\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <DoneIcon></DoneIcon>   \n        </Avatar>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/\")\n          }}\n        >\n          Done\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst AwardMilestones = () => {\n\n  const {projectId} = useParams()\n  const [stage, setStage] = useState(0);\n  const nextStage = ()=>{\n    setStage(stage+1);\n  }\n  const previousStage = ()=>{\n    setStage(stage-1);\n  }\n\n  const awardUsers = () => {\n    for(const userId of userIds){\n      fetch(\"http://localhost:8000/users/\"+userId)\n        .then((res)=>{\n          if(res.ok)\n          {\n            return res.json()\n          }\n        })\n        .then((data)=>{\n          var i = 0;\n          while(i< data.projectsEnrolled.length)\n          {\n            if(data.projectsEnrolled[i].id == projectId)\n            {\n              data.projectsEnrolled[i].milestonesAchieved.push(milestoneToAward)\n              break\n            }\n          }\n          fetch(\"http://localhost:8000/users/\"+userId,\n          {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          })\n          .then((res1)=>{\n            if(res1.ok)\n            {\n              return res1.json()\n            }\n          })\n          .then((data1)=>{\n            console.log(data1)\n          })\n        })\n    }\n  }\n\n  const [userIds, setUserIds] = useState([])\n  const [milestoneToAward, setMilestoneToAward] = useState(\"\")\n  \n  const showForm = (s,previousStage, nextStage, setMilestoneToAward)=>{\n    if(s === 0)\n      return (<SelectMilestone nextStage={nextStage} setMilestoneToAward={setMilestoneToAward} projectId={projectId}></SelectMilestone>)\n    else if(s === 1)\n      return (<SelectUser previousStage={previousStage} nextStage={nextStage} setUserIds={setUserIds}></SelectUser>)\n    else if(s === 2)\n    {\n      awardUsers()\n      return (<SuccessScreen></SuccessScreen>)\n    }\n  }\n\n  return (\n    <div>\n      <CssBaseline></CssBaseline>\n      <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n              }}>\n        {showForm(stage, previousStage, nextStage, setMilestoneToAward)}\n      </Box>\n    </div>\n  )\n}\n\nexport default AwardMilestones"]},"metadata":{},"sourceType":"module"}