{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\src\\\\components\\\\ProjectScreen.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Card, CardContent, Checkbox, Container, CssBaseline, Divider, Drawer, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Paper, Stack, Typography } from '@mui/material';\nimport AssignmentLateIcon from '@mui/icons-material/AssignmentLate';\nimport { React, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport MyAppBar from './MyAppBar';\nimport SideMenu from './SideMenu';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectScreen = _ref => {\n  _s();\n\n  let {\n    logoutFun,\n    user,\n    setUser\n  } = _ref;\n  const {\n    projectId\n  } = useParams();\n  const [project, setProject] = useState({\n    title: \"ProjectTitle\",\n    creator: \"-\",\n    date: \"-\",\n    milestones: []\n  });\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects/\" + projectId).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error();\n      }\n    }).then(data => {\n      console.log(\"Project:\");\n      console.log(data);\n      setProject(data);\n    }).catch(err => {\n      console.log(\"Error\");\n      console.log(err);\n    });\n  }, []);\n  const [isDrawerOpen, setDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawer(!isDrawerOpen);\n  };\n\n  const isMilestoneAchieved = (usr, milestone) => {\n    const userProjectIds = usr.projectsEnrolled.map(p => p.projectId);\n    if (!userProjectIds.includes(projectId)) return false;\n    const currentProject = usr.projectsEnrolled.filter(p => p.projectId !== projectId)[0]; // console.log(currentProject)\n\n    return currentProject.milestonesAchieved.includes(milestone.name);\n  };\n\n  const isEnrolled = (usr, id) => {\n    console.log(\"Usr:\");\n    console.log(usr);\n    const projectIds = usr.projectsEnrolled.map(p => p.projectId);\n    console.log(projectIds);\n    return projectIds.includes(id);\n  };\n\n  const enrollToProject = id => {\n    user.projectsEnrolled.push({\n      projectId: id,\n      milestonesAchieved: []\n    });\n    fetch(\"http://localhost:8000/users/\" + user.id, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      setUser(data);\n      console.log(data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyAppBar, {\n      logoutFun: logoutFun,\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: isDrawerOpen,\n      onClose: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          padding: 4,\n          children: [/*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              children: project.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: \"Details:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"creator:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    children: project.creator.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    children: \"date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    children: Date(project.date)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: project.milestones.map(milestone => /*#__PURE__*/_jsxDEV(ListItem, {\n              divider: true,\n              secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n                edge: \"end\",\n                checked: isMilestoneAchieved(milestone)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(AssignmentLateIcon, {\n                  color: \"yellow\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: milestone.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, milestone.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            justifyContent: \"end\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: isEnrolled(projectId) ? \"contained\" : \"outlined\",\n              disabled: isEnrolled(projectId),\n              color: \"success\",\n              onClick: () => {\n                enrollToProject(projectId);\n              },\n              children: isEnrolled(projectId) ? \"Enrolled\" : \"Enroll\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectScreen, \"5FkJiEnYUgWwtUeZSKE7QyF/CuY=\", false, function () {\n  return [useParams];\n});\n\n_c = ProjectScreen;\nexport default ProjectScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectScreen\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/src/components/ProjectScreen.js"],"names":["Box","Button","Card","CardContent","Checkbox","Container","CssBaseline","Divider","Drawer","List","ListItem","ListItemButton","ListItemIcon","ListItemText","Paper","Stack","Typography","AssignmentLateIcon","React","useState","useParams","MyAppBar","SideMenu","useEffect","ProjectScreen","logoutFun","user","setUser","projectId","project","setProject","title","creator","date","milestones","fetch","then","res","ok","json","Error","data","console","log","catch","err","isDrawerOpen","setDrawer","toggleDrawer","isMilestoneAchieved","usr","milestone","userProjectIds","projectsEnrolled","map","p","includes","currentProject","filter","milestonesAchieved","name","isEnrolled","id","projectIds","enrollToProject","push","method","headers","body","JSON","stringify","margin","username","Date"],"mappings":";;;AAAA,SAAQA,GAAR,EAAaC,MAAb,EAAqBC,IAArB,EAA2BC,WAA3B,EAAwCC,QAAxC,EAAkDC,SAAlD,EAA6DC,WAA7D,EAA0EC,OAA1E,EAAmFC,MAAnF,EAA2FC,IAA3F,EAAiGC,QAAjG,EAA2GC,cAA3G,EAA2HC,YAA3H,EAAyIC,YAAzI,EAAuJC,KAAvJ,EAA8JC,KAA9J,EAAqKC,UAArK,QAAuL,eAAvL;AACA,OAAOC,kBAAP,MAA+B,oCAA/B;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,aAAa,GAAG,QAAgC;AAAA;;AAAA,MAA/B;AAACC,IAAAA,SAAD;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA;AAAlB,GAA+B;AAEpD,QAAM;AAACC,IAAAA;AAAD,MAAcR,SAAS,EAA7B;AAEA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC;AACrCY,IAAAA,KAAK,EAAE,cAD8B;AAErCC,IAAAA,OAAO,EAAE,GAF4B;AAGrCC,IAAAA,IAAI,EAAE,GAH+B;AAIrCC,IAAAA,UAAU,EAAE;AAJyB,GAAD,CAAtC;AAOAX,EAAAA,SAAS,CAAC,MAAI;AACZY,IAAAA,KAAK,CAAC,oCAAkCP,SAAnC,CAAL,CACGQ,IADH,CACSC,GAAD,IAAO;AACX,UAAGA,GAAG,CAACC,EAAP,EACA;AACE,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD,OAHD,MAKA;AACE,cAAMC,KAAK,EAAX;AACD;AACF,KAVH,EAWGJ,IAXH,CAWSK,IAAD,IAAQ;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAX,MAAAA,UAAU,CAACW,IAAD,CAAV;AACD,KAfH,EAgBGG,KAhBH,CAgBUC,GAAD,IAAO;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KAnBH;AAoBD,GArBQ,EAqBN,EArBM,CAAT;AAuBA,QAAM,CAACC,YAAD,EAAeC,SAAf,IAA4B5B,QAAQ,CAAC,KAAD,CAA1C;;AACA,QAAM6B,YAAY,GAAG,MAAI;AACvBD,IAAAA,SAAS,CAAC,CAACD,YAAF,CAAT;AACD,GAFD;;AAIA,QAAMG,mBAAmB,GAAG,CAACC,GAAD,EAAKC,SAAL,KAAiB;AAC3C,UAAMC,cAAc,GAAGF,GAAG,CAACG,gBAAJ,CAAqBC,GAArB,CAA0BC,CAAD,IAAMA,CAAC,CAAC3B,SAAjC,CAAvB;AACA,QAAG,CAACwB,cAAc,CAACI,QAAf,CAAwB5B,SAAxB,CAAJ,EACE,OAAO,KAAP;AACF,UAAM6B,cAAc,GAAGP,GAAG,CAACG,gBAAJ,CAAqBK,MAArB,CAA6BH,CAAD,IAAMA,CAAC,CAAC3B,SAAF,KAAcA,SAAhD,EAA4D,CAA5D,CAAvB,CAJ2C,CAK3C;;AACA,WAAO6B,cAAc,CAACE,kBAAf,CAAkCH,QAAlC,CAA2CL,SAAS,CAACS,IAArD,CAAP;AAED,GARD;;AAUA,QAAMC,UAAU,GAAG,CAACX,GAAD,EAAKY,EAAL,KAAY;AAE7BpB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACA,UAAMa,UAAU,GAAGb,GAAG,CAACG,gBAAJ,CAAqBC,GAArB,CAA0BC,CAAD,IAAKA,CAAC,CAAC3B,SAAhC,CAAnB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYoB,UAAZ;AACA,WAAOA,UAAU,CAACP,QAAX,CAAoBM,EAApB,CAAP;AACD,GAPD;;AASA,QAAME,eAAe,GAAIF,EAAD,IAAM;AAC5BpC,IAAAA,IAAI,CAAC2B,gBAAL,CAAsBY,IAAtB,CAA2B;AACzBrC,MAAAA,SAAS,EAAEkC,EADc;AAEzBH,MAAAA,kBAAkB,EAAE;AAFK,KAA3B;AAIAxB,IAAAA,KAAK,CAAC,iCAA+BT,IAAI,CAACoC,EAArC,EACL;AACEI,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe5C,IAAf;AALR,KADK,CAAL,CAQCU,IARD,CAQOC,GAAD,IAAO;AACX,UAAGA,GAAG,CAACC,EAAP,EACA;AACE,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,KAbD,EAcCH,IAdD,CAcOK,IAAD,IAAQ;AACZd,MAAAA,OAAO,CAACc,IAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAjBD;AAkBD,GAvBD;;AAyBA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEhB,SAArB;AAAgC,MAAA,YAAY,EAAEuB;AAA9C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AACE,MAAA,MAAM,EAAE,MADV;AAEE,MAAA,IAAI,EAAEF,YAFR;AAGE,MAAA,OAAO,EAAEE,YAHX;AAAA,6BAKE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YAHF,eAUE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAACuB,QAAAA,MAAM,EAAE;AAAT,OAAT;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,CAAhB;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,KAAjB;AAAuB,YAAA,cAAc,EAAC,eAAtC;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA,wBAA0B1C,OAAO,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD;AAAA,qCACE,QAAC,WAAD;AAAA,wCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE,QAAC,KAAD;AAAO,kBAAA,SAAS,EAAC,KAAjB;AAAuB,kBAAA,OAAO,EAAE,CAAhC;AAAA,0CACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,UAAD;AAAA,8BAAaF,OAAO,CAACG,OAAR,CAAgBwC;AAA7B;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAOE,QAAC,KAAD;AAAO,kBAAA,SAAS,EAAC,KAAjB;AAAuB,kBAAA,OAAO,EAAE,CAAhC;AAAA,0CACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,QAAC,UAAD;AAAA,8BAAaC,IAAI,CAAC5C,OAAO,CAACI,IAAT;AAAjB;AAAA;AAAA;AAAA;AAAA,0BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAkBE,QAAC,IAAD;AAAA,sBACGJ,OAAO,CAACK,UAAR,CAAmBoB,GAAnB,CAAwBH,SAAD,iBACtB,QAAC,QAAD;AAAU,cAAA,OAAO,EAAE,IAAnB;AAA8C,cAAA,eAAe,eAC3D,QAAC,QAAD;AACE,gBAAA,IAAI,EAAC,KADP;AAEE,gBAAA,OAAO,EAAEF,mBAAmB,CAACE,SAAD;AAF9B;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA,sCAME,QAAC,YAAD;AAAA,uCACE,QAAC,kBAAD;AAAoB,kBAAA,KAAK,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBANF,eASE,QAAC,YAAD;AAAc,gBAAA,OAAO,EAAIA,SAAS,CAACS;AAAnC;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA,eAA8BT,SAAS,CAACS,IAAxC;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAiCE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,KAAjB;AAAuB,YAAA,cAAc,EAAC,KAAtC;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAGC,UAAU,CAACjC,SAAD,CAAX,GAAwB,WAAxB,GAAoC,UAArD;AAAiE,cAAA,QAAQ,EAAEiC,UAAU,CAACjC,SAAD,CAArF;AAAkG,cAAA,KAAK,EAAC,SAAxG;AAAkH,cAAA,OAAO,EAAE,MAAI;AAACoC,gBAAAA,eAAe,CAACpC,SAAD,CAAf;AAA2B,eAA3J;AAAA,wBAA+JiC,UAAU,CAACjC,SAAD,CAAX,GAAwB,UAAxB,GAAmC;AAAjM;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsDD,CAzID;;GAAMJ,a;UAEgBJ,S;;;KAFhBI,a;AA2IN,eAAeA,aAAf","sourcesContent":["import {Box, Button, Card, CardContent, Checkbox, Container, CssBaseline, Divider, Drawer, List, ListItem, ListItemButton, ListItemIcon, ListItemText, Paper, Stack, Typography } from '@mui/material'\nimport AssignmentLateIcon from '@mui/icons-material/AssignmentLate';\nimport {React, useState} from 'react'\nimport {useParams} from \"react-router-dom\"\nimport MyAppBar from './MyAppBar';\nimport SideMenu from './SideMenu';\nimport { useEffect } from 'react';\n\nconst ProjectScreen = ({logoutFun, user, setUser}) => {\n\n  const {projectId} = useParams()\n  \n  const [project, setProject] = useState({\n    title: \"ProjectTitle\",\n    creator: \"-\",\n    date: \"-\", \n    milestones: []\n  })\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects/\"+projectId)\n      .then((res)=>{\n        if(res.ok)\n        {\n          return res.json()\n        }\n        else\n        {\n          throw Error()\n        }\n      })\n      .then((data)=>{\n        console.log(\"Project:\")\n        console.log(data)\n        setProject(data)\n      })\n      .catch((err)=>{\n        console.log(\"Error\")\n        console.log(err)\n      })\n  }, [])\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n  const toggleDrawer = ()=>{\n    setDrawer(!isDrawerOpen)\n  }\n\n  const isMilestoneAchieved = (usr,milestone)=>{\n    const userProjectIds = usr.projectsEnrolled.map((p)=>(p.projectId))\n    if(!userProjectIds.includes(projectId))\n      return false;\n    const currentProject = usr.projectsEnrolled.filter((p)=>(p.projectId!==projectId))[0]\n    // console.log(currentProject)\n    return currentProject.milestonesAchieved.includes(milestone.name)\n\n  }\n\n  const isEnrolled = (usr,id) => {\n    \n    console.log(\"Usr:\")\n    console.log(usr)\n    const projectIds = usr.projectsEnrolled.map((p)=>p.projectId)\n    console.log(projectIds)\n    return projectIds.includes(id)\n  }\n\n  const enrollToProject = (id)=>{\n    user.projectsEnrolled.push({\n      projectId: id,\n      milestonesAchieved: []\n    })\n    fetch(\"http://localhost:8000/users/\"+user.id,\n    {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n    })\n    .then((data)=>{\n      setUser(data)\n      console.log(data)\n    })\n  }\n\n  return (\n    <div>\n      <CssBaseline></CssBaseline>\n      <MyAppBar logoutFun={logoutFun} toggleDrawer={toggleDrawer}></MyAppBar>\n      <Drawer\n        anchor={\"left\"}\n        open={isDrawerOpen}\n        onClose={toggleDrawer}\n      >\n        <SideMenu></SideMenu>\n      </Drawer>\n      <Box sx={{margin: 4}}>\n        <Card>\n          <Stack padding={4}>\n            <Stack direction=\"row\" justifyContent=\"space-between\">\n              <Typography variant='h3'>{project.title}</Typography>\n              <Card>\n                <CardContent>\n                  <Typography variant='h5'>Details:</Typography>\n                  <Divider></Divider>\n                  <Stack direction=\"row\" spacing={1}>\n                    <Typography>creator:</Typography>\n                    <Typography>{project.creator.username}</Typography>\n                  </Stack>\n                  <Stack direction=\"row\" spacing={1}>\n                    <Typography>date:</Typography>\n                    <Typography>{Date(project.date)}</Typography>\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Stack>\n            <List>\n              {project.milestones.map((milestone)=>(\n                <ListItem divider={true} key={milestone.name} secondaryAction={\n                  <Checkbox\n                    edge=\"end\"\n                    checked={isMilestoneAchieved(milestone)}\n                  />\n                }>\n                  <ListItemIcon>\n                    <AssignmentLateIcon color='yellow'></AssignmentLateIcon>\n                  </ListItemIcon>\n                  <ListItemText primary = {milestone.name}></ListItemText>\n                </ListItem>\n              ))}\n            </List>\n            <Stack direction=\"row\" justifyContent=\"end\">\n            <Button variant={(isEnrolled(projectId))?\"contained\":\"outlined\"} disabled={isEnrolled(projectId)} color='success' onClick={()=>{enrollToProject(projectId)}}>{(isEnrolled(projectId))?\"Enrolled\":\"Enroll\"}</Button>\n            </Stack>\n          </Stack>\n        </Card>\n      </Box>\n    </div>\n  )\n}\n\nexport default ProjectScreen"]},"metadata":{},"sourceType":"module"}