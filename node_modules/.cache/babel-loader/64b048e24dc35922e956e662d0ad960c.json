{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\src\\\\components\\\\MyProjects.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport MyAppBar from './MyAppBar';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Drawer from '@mui/material/Drawer';\nimport AddIcon from '@mui/icons-material/Add';\nimport { Box, Card, CardContent, CssBaseline, List, ListItem, ListItemText, ListSubheader, Stack } from '@mui/material';\nimport SideMenu from './SideMenu';\nimport { getUser } from '../utilities/LoginService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyProjects = () => {\n  _s();\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawer(!isDrawerOpen);\n  };\n\n  const navigate = useNavigate();\n  const user = getUser();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects\").then(res => res.json()).then(data => {\n      let projectFilter = data.filter(project => project.admins.map(admin => admin.id).includes(user.id));\n      console.log(projectFilter);\n\n      if (projectFilter.length !== 0) {\n        setProjects(projectFilter);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyAppBar, {\n      title: \"My Projects\",\n      logoutFun: logoutFun,\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: isDrawerOpen,\n      onClose: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: 500\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"My Projects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this),\n            children: projects.map(project => /*#__PURE__*/_jsxDEV(ListItem, {\n              secondaryAction: /*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    navigate(\"/award-milestones/\" + project.id);\n                  },\n                  children: \"Award Milestones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    navigate(\"/manage-projects/\" + project.id);\n                  },\n                  children: \"Manage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: project.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              navigate(\"/create-project\");\n            },\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 96\n            }, this),\n            children: \"Create Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyProjects, \"yZSLu3kLsLOVB7LHJcZxs+AtmBQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MyProjects;\nexport default MyProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProjects\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/src/components/MyProjects.js"],"names":["React","useState","useEffect","Link","useNavigate","MyAppBar","Button","Container","Drawer","AddIcon","Box","Card","CardContent","CssBaseline","List","ListItem","ListItemText","ListSubheader","Stack","SideMenu","getUser","MyProjects","isDrawerOpen","setDrawer","toggleDrawer","navigate","user","projects","setProjects","fetch","then","res","json","data","projectFilter","filter","project","admins","map","admin","id","includes","console","log","length","logoutFun","margin","display","flexDirection","alignItems","width","title"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport { Link, useNavigate } from \"react-router-dom\";\nimport MyAppBar from './MyAppBar'\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Drawer from '@mui/material/Drawer';\nimport AddIcon from '@mui/icons-material/Add';\nimport {Box, Card, CardContent, CssBaseline, List, ListItem, ListItemText, ListSubheader, Stack } from '@mui/material';\nimport SideMenu from './SideMenu';\nimport { getUser } from '../utilities/LoginService';\n\nconst MyProjects = () => {\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n  const toggleDrawer = ()=>{\n    setDrawer(!isDrawerOpen)\n  }\n  const navigate = useNavigate()\n\n  const user = getUser()\n  const [projects, setProjects] = useState([]);\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects\")\n    .then((res)=>res.json())\n    .then((data)=>{\n      let projectFilter = data.filter((project)=>(project.admins.map(admin=>admin.id).includes(user.id)))\n      console.log(projectFilter)\n      if(projectFilter.length !== 0)\n      {\n        setProjects(projectFilter)\n      }\n    })\n  },[])\n\n  return (\n    <div>\n      <CssBaseline></CssBaseline>\n      <MyAppBar title=\"My Projects\" logoutFun={logoutFun} toggleDrawer={toggleDrawer}></MyAppBar>\n      <Drawer\n        anchor={\"left\"}\n        open={isDrawerOpen}\n        onClose={toggleDrawer}\n      >\n        <SideMenu></SideMenu>\n      </Drawer>\n      <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n      }}>\n        <Card sx={{width:500}}>\n          <CardContent>\n            <List subheader={\n              <ListSubheader>My Projects</ListSubheader>\n            }>\n              {\n                projects.map((project)=>(\n                  <ListItem secondaryAction={(\n                    <Stack direction=\"row\">\n                      <Button onClick={()=>{navigate(\"/award-milestones/\"+project.id)}}>Award Milestones</Button>\n                      <Button onClick={()=>{navigate(\"/manage-projects/\"+project.id)}}>Manage</Button>\n                    </Stack>\n                  )}>\n                    <ListItemText primary={project.title}></ListItemText>\n                  </ListItem>\n                ))\n              }\n            </List>\n            \n            <Button onClick={()=>{navigate(\"/create-project\")}} variant=\"contained\" startIcon={<AddIcon />}>Create Project</Button>\n          </CardContent>\n          \n        </Card>\n      </Box>\n    </div>\n  )\n}\n\nexport default MyProjects"]},"metadata":{},"sourceType":"module"}