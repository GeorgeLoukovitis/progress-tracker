{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\src\\\\components\\\\AwardMilestones.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Drawer, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport MyAppBar from './MyAppBar';\nimport { getToken } from '../utilities/LoginService';\nimport { isMilestoneAchieved } from \"../utilities/ProjectService\";\nimport SideMenu from './SideMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectMilestone = _ref => {\n  _s();\n\n  let {\n    previousStage,\n    nextStage,\n    setMilestoneToAward,\n    projectId,\n    userToAward\n  } = _ref;\n  const [project, setProject] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      console.log(\"Project\"); // console.log(data)\n\n      setProject(data);\n    });\n  }, [projectId]);\n  const [milestone, setMilestone] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select Milestone To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), project ? /*#__PURE__*/_jsxDEV(List, {\n        children: project.milestones.filter(m => !isMilestoneAchieved(userToAward, m)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: milestone === val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              setMilestone(val);\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.name,\n              secondary: project.requiredMilestones.includes(val._id) ? \"Required\" : \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        disabled: !milestone,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setMilestoneToAward(milestone);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectMilestone, \"xl+H7AsowcZ1+q5Csn0ggrHTZZg=\");\n\n_c = SelectMilestone;\n\nconst SelectUser = _ref2 => {\n  _s2();\n\n  let {\n    nextStage,\n    setUserToAward\n  } = _ref2;\n  const {\n    projectId\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/enrolledUsers/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) return res.json();else throw Error(res.statusText);\n    }).then(data => {\n      setUsers(data);\n    }).catch(err => {\n      console.log(err.message);\n      setErrorMessage(err.message);\n    });\n  }, [projectId]);\n  const navigate = useNavigate();\n  const [selectedUser, setSelectedUser] = useState({\n    _id: 0\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select User To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), errorMessage ? errorMessage : /*#__PURE__*/_jsxDEV(List, {\n        children: users.filter(u => u.username.includes(searchTerm)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedUser._id === val._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              if (selectedUser._id === val._id) {\n                console.log(\"Remove\");\n                setSelectedUser(null);\n              } else {\n                console.log(\"Add\");\n                setSelectedUser(val);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.username,\n              secondary: \"#\" + val._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/manage-projects\");\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: selectedUser._id == 0,\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setUserToAward(selectedUser);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SelectUser, \"Av5A1FO6BL4cD6LTr6WJXzRnxx4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c2 = SelectUser;\n\nconst SelectSupport = _ref3 => {\n  _s3();\n\n  let {\n    previousStage,\n    nextStage,\n    setAwardSupport,\n    userToAward\n  } = _ref3;\n  const {\n    projectId\n  } = useParams();\n  const [milestones, setMilestones] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error();\n      }\n    }).then(data => {\n      console.log(\"Project\");\n      console.log(data);\n      setMilestones(data.milestones);\n    });\n  }, [projectId]);\n  const [support, setSupport] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Why is the User Awarded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Select some of the user's achievements to support awarding him/her this milestone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: milestones.filter(m => m.name.includes(searchTerm) && isMilestoneAchieved(userToAward, m)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: support.includes(val._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              if (support.includes(val._id)) {\n                console.log(\"Remove\");\n                setSupport(support.filter(m => m !== val._id));\n              } else {\n                console.log(\"Add\");\n                setSupport([...support, val._id]);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.name,\n              secondary: \"#\" + val._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setAwardSupport(support);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(SelectSupport, \"uEe47W4tABD/BDh9+3Tb0oIubuE=\", false, function () {\n  return [useParams];\n});\n\n_c3 = SelectSupport;\n\nconst SetData = _ref4 => {\n  _s4();\n\n  let {\n    setAwardData,\n    previousStage,\n    nextStage\n  } = _ref4;\n  const [data, setData] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Enter achievement comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Comments\",\n        label: \"Comments (optional)\",\n        name: \"comments\",\n        autoComplete: \"\",\n        value: data,\n        onChange: e => {\n          setData(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setAwardData(data);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(SetData, \"avaWeDctHFwWP+lC5+N1mkv/uq8=\");\n\n_c4 = SetData;\n\nconst SuccessScreen = _ref5 => {\n  _s5();\n\n  let {\n    errorMessage\n  } = _ref5;\n  const navigate = useNavigate();\n  console.log('Error:', errorMessage);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [errorMessage ? /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Awarding Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'red'\n        },\n        children: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h3\",\n        variant: \"h5\",\n        children: [\" \", errorMessage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Milestoned Awarded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'green'\n        },\n        children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/\");\n        },\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 356,\n    columnNumber: 5\n  }, this);\n};\n\n_s5(SuccessScreen, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c5 = SuccessScreen;\n\nconst AwardMilestones = () => {\n  _s6();\n\n  const {\n    projectId\n  } = useParams();\n  const [isDrawerOpen, setDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawer(!isDrawerOpen);\n  };\n\n  const [stage, setStage] = useState(0);\n\n  const nextStage = () => {\n    setStage(stage + 1);\n  };\n\n  const previousStage = () => {\n    setStage(stage - 1);\n  };\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const awardUser = () => {\n    console.log(\"Award\");\n    console.log(milestoneToAward);\n    console.log(userToAward);\n    fetch(\"http://localhost:8000/awardMilestone/\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        milestoneId: milestoneToAward._id,\n        userId: userToAward._id,\n        data: awardData,\n        support: awardSupport\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error(res.statusText);\n      }\n    }).then(data => {\n      console.log(data);\n    }).catch(err => {\n      // console.log(err.message)\n      setErrorMessage(err.message);\n      console.log(\"Error: \", errorMessage);\n    });\n  };\n\n  const [userToAward, setUserToAward] = useState(null);\n  const [milestoneToAward, setMilestoneToAward] = useState(null);\n  const [awardSupport, setAwardSupport] = useState([]);\n  const [awardData, setAwardData] = useState(\"\");\n\n  const showForm = (s, previousStage, nextStage, setMilestoneToAward) => {\n    if (s === 0) return /*#__PURE__*/_jsxDEV(SelectUser, {\n      nextStage: nextStage,\n      setUserToAward: setUserToAward\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 15\n    }, this);else if (s === 1) return /*#__PURE__*/_jsxDEV(SelectMilestone, {\n      previousStage: previousStage,\n      nextStage: nextStage,\n      setMilestoneToAward: setMilestoneToAward,\n      projectId: projectId,\n      userToAward: userToAward\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 15\n    }, this);else if (s === 2) return /*#__PURE__*/_jsxDEV(SelectSupport, {\n      previousStage: previousStage,\n      nextStage: nextStage,\n      setAwardSupport: setAwardSupport,\n      userToAward: userToAward\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 15\n    }, this);else if (s === 3) return /*#__PURE__*/_jsxDEV(SetData, {\n      previousStage: previousStage,\n      nextStage: nextStage,\n      setAwardData: setAwardData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 15\n    }, this);else if (s === 4) {\n      awardUser();\n      return /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: 500\n        },\n        children: [errorMessage ? /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Awarding Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'red'\n            },\n            children: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: [\" \", errorMessage, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Milestoned Awarded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              m: 1,\n              bgcolor: 'green'\n            },\n            children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mb: 2\n            },\n            onClick: () => {\n              navigate(\"/\");\n            },\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyAppBar, {\n      title: \"Award Milestone\",\n      logoutFun: () => {},\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: isDrawerOpen,\n      onClose: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: showForm(stage, previousStage, nextStage, setMilestoneToAward)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 512,\n    columnNumber: 5\n  }, this);\n};\n\n_s6(AwardMilestones, \"fU7NscbyFjZPgOYZ9CohOAaCypg=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c6 = AwardMilestones;\nexport default AwardMilestones;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SelectMilestone\");\n$RefreshReg$(_c2, \"SelectUser\");\n$RefreshReg$(_c3, \"SelectSupport\");\n$RefreshReg$(_c4, \"SetData\");\n$RefreshReg$(_c5, \"SuccessScreen\");\n$RefreshReg$(_c6, \"AwardMilestones\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/src/components/AwardMilestones.js"],"names":["React","useEffect","useState","useNavigate","useParams","Avatar","Box","Button","Card","CardActions","CardContent","Checkbox","CssBaseline","Drawer","List","ListItem","ListItemButton","ListItemText","TextField","Typography","DoneIcon","ErrorIcon","MyAppBar","getToken","isMilestoneAchieved","SideMenu","SelectMilestone","previousStage","nextStage","setMilestoneToAward","projectId","userToAward","project","setProject","fetch","mode","method","headers","then","res","ok","json","data","console","log","milestone","setMilestone","width","milestones","filter","m","map","val","name","requiredMilestones","includes","_id","mb","SelectUser","setUserToAward","users","setUsers","errorMessage","setErrorMessage","Error","statusText","catch","err","message","navigate","selectedUser","setSelectedUser","searchTerm","setSearchTerm","e","target","value","u","username","SelectSupport","setAwardSupport","setMilestones","support","setSupport","SetData","setAwardData","setData","SuccessScreen","display","flexDirection","alignItems","bgcolor","AwardMilestones","isDrawerOpen","setDrawer","toggleDrawer","stage","setStage","awardUser","milestoneToAward","body","JSON","stringify","milestoneId","userId","awardData","awardSupport","showForm","s","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Drawer, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material'\nimport DoneIcon from '@mui/icons-material/Done';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport MyAppBar from './MyAppBar';\nimport { getToken } from '../utilities/LoginService';\nimport {isMilestoneAchieved} from \"../utilities/ProjectService\"\nimport SideMenu from './SideMenu';\n\n\nconst SelectMilestone = ({previousStage, nextStage, setMilestoneToAward, projectId, userToAward}) => {\n\n  const [project, setProject] = useState(null)\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects/\"+projectId,\n    {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n    })\n    .then((data)=>{\n      console.log(\"Project\")\n      // console.log(data)\n      setProject(data)\n    })\n  },[projectId,])\n  \n  const [milestone, setMilestone] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select Milestone To Award\n        </Typography>\n        {(project)?\n        <List>\n          {project.milestones.filter((m)=>(!isMilestoneAchieved(userToAward, m))).map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={milestone===val}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{setMilestone(val)}}>\n                <ListItemText primary={val.name} secondary={(project.requiredMilestones.includes(val._id))?\"Required\":\"Optional\"}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>:\n        <div></div>}\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          disabled = {!milestone}\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setMilestoneToAward(milestone)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SelectUser = ({nextStage, setUserToAward})=> {\n  const {projectId} = useParams()\n  const [users, setUsers] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/enrolledUsers/\"+projectId,\n    {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n      .then((res)=>{\n        if(res.ok)\n          return res.json()\n        else\n          throw Error(res.statusText)\n      })\n      .then((data)=>{\n        setUsers(data)\n      })\n      .catch((err)=>{\n        console.log(err.message)\n        setErrorMessage(err.message)\n      })\n  },[projectId,])\n  \n  const navigate = useNavigate()\n  const [selectedUser, setSelectedUser] = useState({_id:0}) \n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select User To Award\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        {\n          (errorMessage)?\n          errorMessage:\n          <List>\n            {users.filter((u)=>(u.username.includes(searchTerm))).map((val=>(\n              <ListItem key={val._id} secondaryAction={\n                <Checkbox checked={selectedUser._id === val._id}></Checkbox>\n              }>\n                <ListItemButton onClick={()=>{\n                  if(selectedUser._id === val._id)\n                  {\n                    console.log(\"Remove\")\n                    setSelectedUser(null)\n                  }\n                  else\n                  {\n                    console.log(\"Add\")\n                    setSelectedUser(val)\n                  }\n                }}>\n                  <ListItemText primary={val.username} secondary={\"#\"+val._id}></ListItemText>\n                </ListItemButton>\n              </ListItem>\n            )))}\n          </List>\n        }\n        \n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/manage-projects\")\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          disabled = {selectedUser._id == 0}\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setUserToAward(selectedUser)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SelectSupport = ({previousStage, nextStage, setAwardSupport, userToAward}) => {\n\n  const {projectId} = useParams();\n  const [milestones, setMilestones] = useState([])\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects/\"+projectId,{\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n      else{\n        throw Error()\n      }\n    })\n    .then((data)=>{\n      console.log(\"Project\")\n      console.log(data)\n      setMilestones(data.milestones)\n    })\n  }, [projectId,])\n\n  const [support, setSupport] = useState([]) \n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Why is the User Awarded\n        </Typography>\n        <Typography variant='subtitle1'>Select some of the user's achievements to support awarding him/her this milestone</Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        <List>\n          {milestones.filter((m)=>(m.name.includes(searchTerm) && isMilestoneAchieved(userToAward, m))).map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={support.includes(val._id)}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{\n                if(support.includes(val._id))\n                {\n                  console.log(\"Remove\")\n                  setSupport(support.filter(m=>(m!==val._id)))\n                }\n                else\n                {\n                  console.log(\"Add\")\n                  setSupport([...support, val._id])\n                }\n              }}>\n                <ListItemText primary={val.name} secondary={\"#\"+val._id}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setAwardSupport(support)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SetData = ({setAwardData, previousStage, nextStage}) => {\n\n  const [data, setData] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter achievement comments\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Comments\"\n          label=\"Comments (optional)\"\n          name=\"comments\"\n          autoComplete=\"\"\n          value = {data}\n          onChange={(e)=>{setData(e.target.value)}}\n          autoFocus\n        />\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setAwardData(data)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SuccessScreen = ({errorMessage}) => {\n\n  const navigate = useNavigate()\n  console.log('Error:', errorMessage);\n  \n  return (\n    <Card sx={{width:500}}> \n      {\n        (errorMessage)?\n        <CardContent sx={{display: 'flex', flexDirection: 'column',alignItems: 'center'}}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Awarding Error\n          </Typography>\n          <Avatar sx={{ m: 1, bgcolor: 'red' }}>\n            <ErrorIcon></ErrorIcon>   \n          </Avatar>\n          <Typography component=\"h3\" variant=\"h5\"> {errorMessage} </Typography>\n          \n        </CardContent>:\n        <CardContent sx={{display: 'flex', flexDirection: 'column',alignItems: 'center'}} >\n          <Typography component=\"h1\" variant=\"h5\">\n            Milestoned Awarded\n          </Typography>\n          <br></br>\n          <Avatar sx={{ m: 1, bgcolor: 'green' }}>\n            <DoneIcon></DoneIcon>   \n          </Avatar>\n        </CardContent>\n\n      }\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/\")\n          }}\n        >\n          Done\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst AwardMilestones = () => {\n\n  const {projectId} = useParams()\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n  const toggleDrawer = ()=>{\n    setDrawer(!isDrawerOpen)\n  }\n\n  const [stage, setStage] = useState(0);\n  const nextStage = ()=>{\n    setStage(stage+1);\n  }\n  const previousStage = ()=>{\n    setStage(stage-1);\n  }\n\n  const [errorMessage, setErrorMessage] = useState(\"\")\n  const navigate = useNavigate()\n\n  const awardUser = () => {\n    console.log(\"Award\")\n    console.log(milestoneToAward)\n    console.log(userToAward)\n    fetch(\"http://localhost:8000/awardMilestone/\",\n    {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({milestoneId:milestoneToAward._id, userId: userToAward._id, data: awardData, support: awardSupport})\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n      else\n      {\n        throw Error(res.statusText)\n      }\n    })\n    .then((data)=>{console.log(data)})\n    .catch((err)=>{\n      // console.log(err.message)\n      setErrorMessage(err.message)\n      console.log(\"Error: \", errorMessage)\n      \n    })\n  }\n\n  const [userToAward, setUserToAward] = useState(null)\n  const [milestoneToAward, setMilestoneToAward] = useState(null)\n  const [awardSupport, setAwardSupport] = useState([])\n  const [awardData, setAwardData] = useState(\"\")\n  \n  const showForm = (s,previousStage, nextStage, setMilestoneToAward)=>{\n    if(s === 0)\n      return (<SelectUser nextStage={nextStage} setUserToAward={setUserToAward}></SelectUser>)\n    else if(s === 1)\n      return (<SelectMilestone previousStage={previousStage} nextStage={nextStage} setMilestoneToAward={setMilestoneToAward} projectId={projectId} userToAward={userToAward}></SelectMilestone>)\n    else if(s ===2)\n      return (<SelectSupport previousStage={previousStage} nextStage={nextStage} setAwardSupport={setAwardSupport} userToAward={userToAward}></SelectSupport>)\n    else if(s ===3)\n      return (<SetData previousStage={previousStage} nextStage={nextStage} setAwardData={setAwardData}></SetData>)\n    else if(s === 4)\n    {\n      awardUser()\n      return (\n        <Card sx={{width:500}}> \n          {\n            (errorMessage)?\n            <CardContent sx={{display: 'flex', flexDirection: 'column',alignItems: 'center'}}>\n              <Typography component=\"h1\" variant=\"h5\">\n                Awarding Error\n              </Typography>\n              <Avatar sx={{ m: 1, bgcolor: 'red' }}>\n                <ErrorIcon></ErrorIcon>   \n              </Avatar>\n              <Typography variant=\"subtitle1\"> {errorMessage} </Typography>\n              \n            </CardContent>:\n            <CardContent sx={{display: 'flex', flexDirection: 'column',alignItems: 'center'}} >\n              <Typography component=\"h1\" variant=\"h5\">\n                Milestoned Awarded\n              </Typography>\n              <br></br>\n              <Avatar sx={{ m: 1, bgcolor: 'green' }}>\n                <DoneIcon></DoneIcon>   \n              </Avatar>\n            </CardContent>\n    \n          }\n          <CardActions>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              sx={{ mb: 2 }}\n              onClick={()=>{\n                navigate(\"/\")\n              }}\n            >\n              Done\n            </Button>\n          </CardActions>\n          \n        </Card>\n      )\n    }\n  }\n\n  return (\n    <div>\n      <MyAppBar title=\"Award Milestone\" logoutFun={()=>{}} toggleDrawer={toggleDrawer}></MyAppBar>\n      <CssBaseline></CssBaseline>\n      <Drawer\n          anchor={\"left\"}\n          open={isDrawerOpen}\n          onClose={toggleDrawer}\n        >\n          <SideMenu></SideMenu>\n      </Drawer>\n      <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n              }}>\n        {showForm(stage, previousStage, nextStage, setMilestoneToAward)}\n      </Box>\n    </div>\n  )\n}\n\nexport default AwardMilestones"]},"metadata":{},"sourceType":"module"}