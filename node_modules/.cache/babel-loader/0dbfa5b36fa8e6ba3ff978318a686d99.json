{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\Frontend\\\\src\\\\components\\\\AwardMilestones.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Drawer, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material';\nimport DoneIcon from '@mui/icons-material/Done';\nimport MyAppBar from './MyAppBar';\nimport { getToken } from '../utilities/LoginService';\nimport SideMenu from './SideMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectMilestone = _ref => {\n  _s();\n\n  let {\n    nextStage,\n    setMilestoneToAward,\n    projectId\n  } = _ref;\n  const [project, setProject] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      console.log(\"Project\");\n      console.log(data);\n      setProject(data);\n    });\n  }, [projectId]);\n  const navigate = useNavigate();\n  const [milestone, setMilestone] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select Milestone To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), project ? /*#__PURE__*/_jsxDEV(List, {\n        children: project.milestones.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: milestone === val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              setMilestone(val);\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.name,\n              secondary: project.requiredMilestones.includes(val._id) ? \"Required\" : \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/manage-projects\");\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setMilestoneToAward(milestone);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectMilestone, \"maQ3o6fHrBHmlt+j4uC1G4CRGbg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SelectMilestone;\n\nconst SelectUser = _ref2 => {\n  _s2();\n\n  let {\n    previousStage,\n    nextStage,\n    setUserId\n  } = _ref2;\n  const {\n    projectId\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/enrolledUsers/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      setUsers(data);\n    });\n  }, [projectId]);\n  const [userToAward, setUserToAward] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select Users To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: users.filter(u => u.username.includes(searchTerm)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: userToAward === val._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              if (userToAward === val._id) {\n                console.log(\"Remove\");\n                setUserToAward(null);\n              } else {\n                console.log(\"Add\");\n                setUserToAward(val._id);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.username,\n              secondary: \"#\" + val._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setUserId(userToAward);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SelectUser, \"Hxqop77YzW9IGmtcmI24kdYOCgs=\", false, function () {\n  return [useParams];\n});\n\n_c2 = SelectUser;\n\nconst SelectSupport = () => {\n  _s3();\n\n  const {\n    projectId\n  } = useParams();\n  const [milestones, setMilestones] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error();\n      }\n    }).then(data => {\n      console.log(\"Project\");\n      console.log(data);\n      setMilestones(data.milestones);\n    });\n  }, [projectId]);\n  const [support, setSupport] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Why is the User Awarded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: milestones.filter(m => m.name.includes(searchTerm)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: support.includes(val._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              if (support.includes(val._id)) {\n                console.log(\"Remove\");\n                setSupport(support.filter(m => m !== val._id));\n              } else {\n                console.log(\"Add\");\n                setSupport([...support, val._id]);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.username,\n              secondary: \"#\" + val._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setUserIds(usersToAward);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(SelectSupport, \"uEe47W4tABD/BDh9+3Tb0oIubuE=\", false, function () {\n  return [useParams];\n});\n\n_c3 = SelectSupport;\n\nconst SuccessScreen = () => {\n  _s4();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Milestoned Awarded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/\");\n        },\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(SuccessScreen, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c4 = SuccessScreen;\n\nconst AwardMilestones = () => {\n  _s5();\n\n  const {\n    projectId\n  } = useParams();\n  const [isDrawerOpen, setDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawer(!isDrawerOpen);\n  };\n\n  const [stage, setStage] = useState(0);\n\n  const nextStage = () => {\n    setStage(stage + 1);\n  };\n\n  const previousStage = () => {\n    setStage(stage - 1);\n  };\n\n  const awardUsers = () => {\n    console.log(\"Award\");\n    console.log(milestoneToAward);\n    console.log(userId);\n    fetch(\"http://localhost:8000/awardMilestone/\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        milestoneId: milestoneToAward._id,\n        userId,\n        data: \"\",\n        support: []\n      })\n    });\n  };\n\n  const [userId, setUserId] = useState(null);\n  const [milestoneToAward, setMilestoneToAward] = useState(null);\n  const [awardSupport, setAwardSupport] = useState([]);\n\n  const showForm = (s, previousStage, nextStage, setMilestoneToAward) => {\n    if (s === 0) return /*#__PURE__*/_jsxDEV(SelectMilestone, {\n      nextStage: nextStage,\n      setMilestoneToAward: setMilestoneToAward,\n      projectId: projectId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 15\n    }, this);else if (s === 1) return /*#__PURE__*/_jsxDEV(SelectUser, {\n      previousStage: previousStage,\n      nextStage: nextStage,\n      setUserId: setUserId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }, this);else if (s === 2) return /*#__PURE__*/_jsxDEV(SelectSupport, {\n      previousStage: previousStage,\n      nextStage: nextStage,\n      setUserId: setAwardSupport\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }, this);else if (s === 3) {\n      awardUsers();\n      return /*#__PURE__*/_jsxDEV(SuccessScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyAppBar, {\n      title: \"Award Milestone\",\n      logoutFun: () => {},\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: isDrawerOpen,\n      onClose: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: showForm(stage, previousStage, nextStage, setMilestoneToAward)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 369,\n    columnNumber: 5\n  }, this);\n};\n\n_s5(AwardMilestones, \"tll2GPBI8PXP06k0qA0QTrySBV0=\", false, function () {\n  return [useParams];\n});\n\n_c5 = AwardMilestones;\nexport default AwardMilestones;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"SelectMilestone\");\n$RefreshReg$(_c2, \"SelectUser\");\n$RefreshReg$(_c3, \"SelectSupport\");\n$RefreshReg$(_c4, \"SuccessScreen\");\n$RefreshReg$(_c5, \"AwardMilestones\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/Frontend/src/components/AwardMilestones.js"],"names":["React","useEffect","useState","useNavigate","useParams","Avatar","Box","Button","Card","CardActions","CardContent","Checkbox","CssBaseline","Drawer","List","ListItem","ListItemButton","ListItemText","TextField","Typography","DoneIcon","MyAppBar","getToken","SideMenu","SelectMilestone","nextStage","setMilestoneToAward","projectId","project","setProject","fetch","mode","method","headers","then","res","ok","json","data","console","log","navigate","milestone","setMilestone","width","milestones","map","val","name","requiredMilestones","includes","_id","mb","SelectUser","previousStage","setUserId","users","setUsers","userToAward","setUserToAward","searchTerm","setSearchTerm","e","target","value","filter","u","username","SelectSupport","setMilestones","Error","support","setSupport","m","setUserIds","usersToAward","SuccessScreen","bgcolor","AwardMilestones","isDrawerOpen","setDrawer","toggleDrawer","stage","setStage","awardUsers","milestoneToAward","userId","body","JSON","stringify","milestoneId","awardSupport","setAwardSupport","showForm","s","margin","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Drawer, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material'\nimport DoneIcon from '@mui/icons-material/Done';\nimport MyAppBar from './MyAppBar';\nimport { getToken } from '../utilities/LoginService';\nimport SideMenu from './SideMenu';\n\n\nconst SelectMilestone = ({nextStage, setMilestoneToAward, projectId}) => {\n\n  const [project, setProject] = useState(null)\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects/\"+projectId,\n    {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n    })\n    .then((data)=>{\n      console.log(\"Project\")\n      console.log(data)\n      setProject(data)\n    })\n  },[projectId,])\n  \n  const navigate = useNavigate()\n  const [milestone, setMilestone] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select Milestone To Award\n        </Typography>\n        {(project)?\n        <List>\n          {project.milestones.map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={milestone===val}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{setMilestone(val)}}>\n                <ListItemText primary={val.name} secondary={(project.requiredMilestones.includes(val._id))?\"Required\":\"Optional\"}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>:\n        <div></div>}\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/manage-projects\")\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setMilestoneToAward(milestone)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SelectUser = ({previousStage, nextStage, setUserId})=> {\n  const {projectId} = useParams()\n  const [users, setUsers] = useState([])\n  useEffect(()=>{\n    \n    fetch(\"http://localhost:8000/enrolledUsers/\"+projectId,\n    {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n      .then((res)=>{\n        if(res.ok)\n        {\n          return res.json()\n        }\n      })\n      .then((data)=>{\n        setUsers(data)\n      })\n  },[projectId,])\n  \n  const [userToAward, setUserToAward] = useState(null) \n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select Users To Award\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        <List>\n          {users.filter((u)=>(u.username.includes(searchTerm))).map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={userToAward === val._id}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{\n                if(userToAward === val._id)\n                {\n                  console.log(\"Remove\")\n                  setUserToAward(null)\n                }\n                else\n                {\n                  console.log(\"Add\")\n                  setUserToAward(val._id)\n                }\n              }}>\n                <ListItemText primary={val.username} secondary={\"#\"+val._id}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setUserId(userToAward)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SelectSupport = () => {\n\n  const {projectId} = useParams();\n  const [milestones, setMilestones] = useState([])\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects/\"+projectId,{\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n      else{\n        throw Error()\n      }\n    })\n    .then((data)=>{\n      console.log(\"Project\")\n      console.log(data)\n      setMilestones(data.milestones)\n    })\n  }, [projectId,])\n\n  const [support, setSupport] = useState([]) \n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Why is the User Awarded\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        <List>\n          {milestones.filter((m)=>(m.name.includes(searchTerm))).map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={support.includes(val._id)}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{\n                if(support.includes(val._id))\n                {\n                  console.log(\"Remove\")\n                  setSupport(support.filter(m=>(m!==val._id)))\n                }\n                else\n                {\n                  console.log(\"Add\")\n                  setSupport([...support, val._id])\n                }\n              }}>\n                <ListItemText primary={val.username} secondary={\"#\"+val._id}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setUserIds(usersToAward)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SuccessScreen = () => {\n\n  const navigate = useNavigate()\n  \n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Milestoned Awarded\n        </Typography>\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <DoneIcon></DoneIcon>   \n        </Avatar>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/\")\n          }}\n        >\n          Done\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst AwardMilestones = () => {\n\n  const {projectId} = useParams()\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n  const toggleDrawer = ()=>{\n    setDrawer(!isDrawerOpen)\n  }\n\n  const [stage, setStage] = useState(0);\n  const nextStage = ()=>{\n    setStage(stage+1);\n  }\n  const previousStage = ()=>{\n    setStage(stage-1);\n  }\n\n  const awardUsers = () => {\n    console.log(\"Award\")\n    console.log(milestoneToAward)\n    console.log(userId)\n    fetch(\"http://localhost:8000/awardMilestone/\",\n    {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({milestoneId:milestoneToAward._id, userId, data: \"\", support: []})\n    })\n  }\n\n  const [userId, setUserId] = useState(null)\n  const [milestoneToAward, setMilestoneToAward] = useState(null)\n  const [awardSupport, setAwardSupport] = useState([])\n  \n  const showForm = (s,previousStage, nextStage, setMilestoneToAward)=>{\n    if(s === 0)\n      return (<SelectMilestone nextStage={nextStage} setMilestoneToAward={setMilestoneToAward} projectId={projectId}></SelectMilestone>)\n    else if(s === 1)\n      return (<SelectUser previousStage={previousStage} nextStage={nextStage} setUserId={setUserId}></SelectUser>)\n    else if(s ===2)\n      return (<SelectSupport previousStage={previousStage} nextStage={nextStage} setUserId={setAwardSupport}></SelectSupport>)\n    else if(s === 3)\n    {\n      awardUsers()\n      return (<SuccessScreen></SuccessScreen>)\n    }\n  }\n\n  return (\n    <div>\n      <MyAppBar title=\"Award Milestone\" logoutFun={()=>{}} toggleDrawer={toggleDrawer}></MyAppBar>\n      <CssBaseline></CssBaseline>\n      <Drawer\n          anchor={\"left\"}\n          open={isDrawerOpen}\n          onClose={toggleDrawer}\n        >\n          <SideMenu></SideMenu>\n      </Drawer>\n      <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n              }}>\n        {showForm(stage, previousStage, nextStage, setMilestoneToAward)}\n      </Box>\n    </div>\n  )\n}\n\nexport default AwardMilestones"]},"metadata":{},"sourceType":"module"}