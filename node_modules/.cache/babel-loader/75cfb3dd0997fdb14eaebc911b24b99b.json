{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport MyAppBar from './MyAppBar';\nimport ProjectList from './ProjectList';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Drawer from '@mui/material/Drawer';\nimport AddIcon from '@mui/icons-material/Add';\nimport { CssBaseline } from '@mui/material';\nimport SideMenu from './SideMenu';\nimport { getUser } from \"../utilities/LoginService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    logoutFun\n  } = _ref;\n  const user = getUser();\n  const [isDrawerOpen, setDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawer(!isDrawerOpen);\n  };\n\n  const navigate = useNavigate();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects\").then(res => res.json()).then(data => {\n      let projectFilter = data;\n      console.log(projectFilter);\n\n      if (projectFilter.length !== 0) {\n        setProjects(projectFilter);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyAppBar, {\n      title: \"Enrolled Projects\",\n      logoutFun: logoutFun,\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: \"left\",\n        open: isDrawerOpen,\n        onClose: toggleDrawer,\n        children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          margin: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            width: 500\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              fullWidth: true,\n              id: \"Search Bar\",\n              label: \"Search\",\n              name: \"search-bar\",\n              value: searchTerm,\n              onChange: e => {\n                setSearchTerm(e.target.value);\n              },\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n                children: \"All projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this),\n              children: projects.filter(project => project.title.includes(searchTerm)).map(project => /*#__PURE__*/_jsxDEV(ListItem, {\n                secondaryAction: /*#__PURE__*/_jsxDEV(Stack, {\n                  direction: \"row\",\n                  spacing: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: () => {\n                      navigate(\"/projects/\" + project.id);\n                    },\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: isEnrolled(user, project.id) ? \"contained\" : \"outlined\",\n                    color: \"success\",\n                    disabled: isEnrolled(user, project.id),\n                    onClick: () => {\n                      enrollToProject(project, setLocalUser);\n                    },\n                    children: isEnrolled(user, project.id) ? \"Enrolled\" : \"Enroll\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: project.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, project.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                navigate(\"/\");\n              },\n              variant: \"contained\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => navigate(\"/all-projects\"),\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 88\n        }, this),\n        children: \"EnrolL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"yZSLu3kLsLOVB7LHJcZxs+AtmBQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/src/components/Home.js"],"names":["React","useState","useEffect","Link","useNavigate","MyAppBar","ProjectList","Button","Container","Drawer","AddIcon","CssBaseline","SideMenu","getUser","Home","logoutFun","user","isDrawerOpen","setDrawer","toggleDrawer","navigate","projects","setProjects","fetch","then","res","json","data","projectFilter","console","log","length","margin","display","flexDirection","alignItems","width","searchTerm","e","setSearchTerm","target","value","filter","project","title","includes","map","id","isEnrolled","enrollToProject","setLocalUser"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react'\nimport { Link, useNavigate } from \"react-router-dom\";\nimport MyAppBar from './MyAppBar'\nimport ProjectList from './ProjectList'\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport Drawer from '@mui/material/Drawer';\nimport AddIcon from '@mui/icons-material/Add';\nimport { CssBaseline } from '@mui/material';\nimport SideMenu from './SideMenu';\nimport {getUser} from \"../utilities/LoginService\"\n\nconst Home = ({logoutFun}) => {\n\n  const user = getUser()\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n  const toggleDrawer = ()=>{\n    setDrawer(!isDrawerOpen)\n  }\n\n  const navigate = useNavigate()\n\n  const [projects, setProjects] = useState([]);\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects\")\n    .then((res)=>res.json())\n    .then((data)=>{\n      let projectFilter = data\n      console.log(projectFilter)\n      if(projectFilter.length !== 0)\n      {\n        setProjects(projectFilter)\n      }\n    })\n  },[])\n\n  return (\n    <div>\n      <CssBaseline></CssBaseline>\n      <MyAppBar title=\"Enrolled Projects\" logoutFun={logoutFun} toggleDrawer={toggleDrawer}></MyAppBar>\n      <Container maxWidth=\"sm\">\n        <Drawer\n          anchor={\"left\"}\n          open={isDrawerOpen}\n          onClose={toggleDrawer}\n        >\n          <SideMenu></SideMenu>\n        </Drawer>\n        <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n      }}>\n        <Card sx={{width:500}}>\n          <CardContent>\n            <TextField\n              margin=\"normal\"\n              fullWidth\n              id=\"Search Bar\"\n              label=\"Search\"\n              name=\"search-bar\"\n              value = {searchTerm}\n              onChange={(e)=>{setSearchTerm(e.target.value)}}\n              autoFocus\n            />\n            <List subheader={\n              <ListSubheader>All projects</ListSubheader>\n            }>\n              {\n                projects.filter((project)=>(project.title.includes(searchTerm))).map((project)=>(\n                  <ListItem key={project.id} secondaryAction={(\n                    <Stack direction=\"row\" spacing={1}>\n                      <Button variant=\"outlined\" onClick={()=>{navigate(\"/projects/\"+project.id)}}>Details</Button>\n                      <Button variant={(isEnrolled(user, project.id))?\"contained\":\"outlined\"} color='success' disabled={isEnrolled(user,project.id)} onClick={()=>{enrollToProject(project, setLocalUser)}}>{(isEnrolled(user,project.id))?\"Enrolled\":\"Enroll\"}</Button>\n                    </Stack>\n                  )}>\n                    <ListItemText primary={project.title}></ListItemText>\n                  </ListItem>\n                ))\n              }\n            </List>\n            \n            <Button onClick={()=>{navigate(\"/\")}} variant=\"contained\">Back</Button>\n          </CardContent>\n          \n        </Card>\n      </Box>\n        \n        <Button onClick={()=>navigate(\"/all-projects\")} variant=\"contained\" startIcon={<AddIcon />}>EnrolL</Button>\n        \n      </Container>\n    </div>\n  )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}