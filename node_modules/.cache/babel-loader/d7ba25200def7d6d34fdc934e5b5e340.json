{"ast":null,"code":"var login=function login(email,password,updateState,setError){fetch(\"http://localhost:8000/login\",{mode:\"cors\",method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Access-Control-Allow-Origin\":\"*\"},body:JSON.stringify({email:email,password:password})}).then(function(res){if(res.ok){return res.json();}else{throw Error(res.statusText);}}).then(function(data){if(data){// console.log(data)\nsetUser(data);updateState(data);setToken(data.token);}}).catch(function(err){console.log(err.message);setError(err.message);});};var logout=function logout(){localStorage.removeItem(\"user\");localStorage.removeItem(\"token\");};var register=function register(firstName,lastName,email,password,updateState,setError){fetch(\"http://localhost:8000/register\",{mode:\"cors\",method:\"POST\",headers:{\"Content-Type\":\"application/json\",\"Access-Control-Allow-Origin\":\"*\"},body:JSON.stringify({email:email,password:password,firstName:firstName,lastName:lastName})}).then(function(res){if(res.ok){return res.json();}else{throw Error(res.statusText);}}).then(function(data){// console.log(data)\nupdateState(data);setUser(data);setToken(data.token);}).catch(function(err){setError(err.message);console.log(err.message);});};var getUser=function getUser(){return JSON.parse(localStorage.getItem(\"user\"));};var setUser=function setUser(usr){localStorage.setItem(\"user\",JSON.stringify(usr));};var getToken=function getToken(){return localStorage.getItem(\"token\");};var setToken=function setToken(tkn){localStorage.setItem(\"token\",tkn);};var refresh=function refresh(updateState){if(localStorage.getItem(\"user\")){var uid=getUser()._id;var token=getToken();console.log(\"Refresh user \"+uid);fetch(\"http://localhost:8000/users/\"+uid,{mode:\"cors\",method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"x-access-token\":token,\"Access-Control-Allow-Origin\":\"*\"}}).then(function(res){if(res.ok){return res.json();}else{throw Error(\"Refresh Error\");}}).then(function(data){setUser(data);updateState(data);}).catch(function(err){console.log(err.message);});}};export{login,logout,register,getUser,setUser,refresh,getToken};","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/src/utilities/LoginService.js"],"names":["login","email","password","updateState","setError","fetch","mode","method","headers","body","JSON","stringify","then","res","ok","json","Error","statusText","data","setUser","setToken","token","catch","err","console","log","message","logout","localStorage","removeItem","register","firstName","lastName","getUser","parse","getItem","usr","setItem","getToken","tkn","refresh","uid","_id"],"mappings":"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","sourcesContent":["\nconst login = (email, password, updateState, setError) => {\n    fetch(\"http://localhost:8000/login\",\n    {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({email, password})\n    })\n      .then((res)=>{\n        if(res.ok)\n        {\n          return res.json()\n        }\n        else\n        {\n          throw Error(res.statusText)\n        }\n      })\n      .then((data)=>{\n        if(data)\n        {\n          // console.log(data)\n          setUser(data)\n          updateState(data)\n          setToken(data.token)\n        }\n      })\n      .catch((err)=>\n      {\n        console.log(err.message)\n        setError(err.message)\n      })\n}\n\nconst logout = () => {\n  localStorage.removeItem(\"user\")\n  localStorage.removeItem(\"token\")\n}\n\nconst register = (firstName, lastName, email, password, updateState, setError) => {\n  fetch(\"http://localhost:8000/register\",\n    {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({email, password, firstName, lastName})\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n      else\n      {\n        throw Error(res.statusText)\n      }\n    })\n    .then((data)=>{\n      // console.log(data)\n      updateState(data)\n      setUser(data)\n      setToken(data.token)\n    })\n    .catch((err)=>\n    {\n      setError(err.message)\n      console.log(err.message)\n    })\n}\n\nconst getUser = () =>{\n  return JSON.parse(localStorage.getItem(\"user\"))\n}\n\nconst setUser = (usr) => {\n  localStorage.setItem(\"user\", JSON.stringify(usr))\n}\n\nconst getToken = () => {\n  return localStorage.getItem(\"token\")\n}\n\nconst setToken = (tkn) => {\n  localStorage.setItem(\"token\", tkn)\n}\n\nconst refresh = (updateState) => {\n  if(localStorage.getItem(\"user\"))\n  {\n    const uid = getUser()._id\n    const token = getToken()\n    console.log(\"Refresh user \" + uid)\n    fetch(\"http://localhost:8000/users/\"+uid,\n      {\n        mode: \"cors\",\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token, \n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n      })\n      .then((res)=>{\n        if(res.ok)\n        {\n          return res.json()\n        }\n        else\n        {\n          throw Error(\"Refresh Error\")\n        }\n        \n      })\n      .then((data)=>{\n        setUser(data)\n        updateState(data)\n      })\n      .catch((err)=>{\n        console.log(err.message)\n      })\n  }\n\n}\n\nexport {login, logout, register, getUser, setUser, refresh, getToken}"]},"metadata":{},"sourceType":"module"}