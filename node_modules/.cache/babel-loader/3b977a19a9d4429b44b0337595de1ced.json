{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\frontend\\\\src\\\\components\\\\NewProjectForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Divider, Drawer, IconButton, List, ListItem, ListItemText, ListSubheader, Stack, TextField, Typography } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { getToken, getUser, refresh } from '../utilities/LoginService';\nimport MyAppBar from './MyAppBar';\nimport SideMenu from './SideMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SetTitle = _ref => {\n  _s();\n\n  let {\n    setProjectTitle,\n    nextStage\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Create a new Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Project Title\",\n        label: \"Project Title\",\n        name: \"title\",\n        autoComplete: \"Title 1\",\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setProjectTitle(title);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SetTitle, \"1GNs5BG/zBCkOIT6WAuxDpPLhMw=\");\n\n_c = SetTitle;\n\nconst SetAdmins = _ref2 => {\n  _s2();\n\n  let {\n    setProjectAdmins,\n    nextStage,\n    previousStage,\n    creator\n  } = _ref2;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [admins, setAdmins] = useState([creator]);\n  const [suggestions, setSuggestions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/users\", {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(\"Users\");\n      console.log(data);\n      data = data.filter(s => s._id !== creator._id);\n      setSuggestions(data);\n    });\n  }, [creator]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select project administrators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: suggestions.filter(val => val.username.includes(searchTerm)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setAdmins([...admins, val]);\n              setSuggestions(suggestions.filter(suggestion => suggestion._id !== val._id));\n            },\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val.username,\n            secondary: \"#\" + val._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: admins.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setSuggestions([...suggestions, val]);\n              setAdmins(admins.filter(admin => admin._id !== val._id));\n            },\n            children: /*#__PURE__*/_jsxDEV(RemoveIcon, {\n              sx: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val.username,\n            secondary: \"#\" + val._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setProjectAdmins(admins);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SetAdmins, \"eKDnWVG5TuUocIJErhgUtXkvuQE=\");\n\n_c2 = SetAdmins;\n\nconst MilestoneForm = _ref3 => {\n  _s3();\n\n  let {\n    otherMilestones,\n    setToggle,\n    setMilestones,\n    otherRequiredMilestones,\n    setRequiredMilestones\n  } = _ref3;\n  const [milestoneName, setMilestoneName] = useState(\"\");\n  const [milestoneRequired, setMilestoneRequired] = useState(false);\n  const [milestonePrerequisites, setMilestonePrerequisites] = useState([]);\n\n  const saveMilestone = () => {\n    fetch(\"http://localhost:8000/milestones/\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"x-access-token\": getToken()\n      },\n      body: JSON.stringify({\n        name: milestoneName,\n        prerequisites: milestonePrerequisites.map(m => m._id)\n      })\n    }).then(res => {\n      if (res.ok) return res.json();else throw Error(\"Refresh Error\");\n    }).then(data => {\n      console.log(\"Milestone\");\n      console.log(data);\n      setMilestones([...otherMilestones, data]);\n\n      if (milestoneRequired) {\n        setRequiredMilestones([...otherRequiredMilestones, data]);\n      }\n    }).catch(err => {\n      console.log(err.message);\n    });\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"New Milestone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        id: \"name\",\n        label: \"Milestone Name\",\n        name: \"name\",\n        autoFocus: true,\n        value: milestoneName,\n        onChange: e => {\n          setMilestoneName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: milestoneRequired ? \"contained\" : \"outlined\",\n        onClick: () => {\n          setMilestoneRequired(!milestoneRequired);\n        },\n        children: \"Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n          component: \"div\",\n          children: \"Prerequisites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this),\n        children: otherMilestones.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: milestonePrerequisites.includes(val.name),\n            onChange: () => {\n              if (milestonePrerequisites.includes(val._id)) {\n                setMilestonePrerequisites(milestonePrerequisites.filter(prerequisite => prerequisite !== val.name));\n              } else {\n                setMilestonePrerequisites([...milestonePrerequisites, val.name]);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val.name,\n            secondary: otherRequiredMilestones.includes(val) ? \"Required\" : \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setToggle(false);\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          if (saveMilestone()) setToggle(false);\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(MilestoneForm, \"UqSoFM7OVd0wU/q6dFQD97S61uU=\");\n\n_c3 = MilestoneForm;\n\nconst SetMilestones = _ref4 => {\n  _s4();\n\n  let {\n    setProjectMilestones,\n    setProjectRequiredMilestones,\n    nextStage,\n    previousStage\n  } = _ref4;\n  const [milestones, setMilestones] = useState([]);\n  const [requiredMilestones, setRequiredMilestone] = useState([]);\n  const [toggle, setToggle] = useState(false);\n  return !toggle ? /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Create Milestones for the Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"outlined\",\n        sx: {\n          mt: 2\n        },\n        onClick: () => setToggle(true),\n        children: \" Add Milestone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: milestones.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setMilestones(milestones.filter(milestone => milestone.name !== val.name));\n            },\n            children: /*#__PURE__*/_jsxDEV(RemoveIcon, {\n              sx: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: val.name + \" #\" + val._id,\n            secondary: requiredMilestones.includes(val) ? \"Required\" : \"Optional\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)\n        }, val.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setProjectMilestones(milestones);\n          setProjectRequiredMilestones(requiredMilestones);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(MilestoneForm, {\n    otherMilestones: milestones,\n    setToggle: setToggle,\n    setMilestones: setMilestones,\n    otherRequiredMilestones: requiredMilestones,\n    setRequiredMilestones: setRequiredMilestone\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(SetMilestones, \"+8xxBtfABOljyCC+E9IR+o5BhYs=\");\n\n_c4 = SetMilestones;\n\nconst Preview = _ref5 => {\n  _s5();\n\n  let {\n    title,\n    admins,\n    milestones,\n    requiredMilestones,\n    previousStage,\n    creator\n  } = _ref5;\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"space-evenly\",\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            component: \"div\",\n            children: \"Admins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this),\n          children: admins.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n            divider: \"true\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.username,\n              secondary: \"#\" + val._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, val._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            component: \"div\",\n            children: \"Milestones\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this),\n          children: milestones.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n            divider: \"true\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.name,\n              secondary: requiredMilestones.includes(val) ? \"Required\" : \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)\n          }, val._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          const project = {\n            title,\n            admins: admins.map(a => a._id),\n            milestones: milestones.map(m => m._id),\n            requiredMilestones: requiredMilestones.map(m => m._id)\n          };\n          console.log(project);\n          fetch(\"http://localhost:8000/projects\", {\n            mode: \"cors\",\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"x-access-token\": getToken(),\n              \"Access-Control-Allow-Origin\": \"*\"\n            },\n            body: JSON.stringify(project)\n          }).then(res => {\n            if (res.ok) {\n              return res.json();\n            }\n          }).then(data => {\n            console.log(\"Created Project\");\n            console.log(data);\n            navigate(\"/\");\n          });\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n};\n\n_s5(Preview, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c5 = Preview;\n\nconst NewProjectForm = () => {\n  _s6();\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawer(!isDrawerOpen);\n  };\n\n  const [user, setLocalUser] = useState(getUser());\n  const [stage, setStage] = useState(0);\n\n  const nextStage = () => {\n    setStage(stage + 1);\n  };\n\n  const previousStage = () => {\n    setStage(stage - 1);\n  };\n\n  useEffect(() => {\n    refresh(setLocalUser);\n  }, []);\n\n  const showForm = s => {\n    if (s === 0) return /*#__PURE__*/_jsxDEV(SetTitle, {\n      setProjectTitle: setProjectTitle,\n      nextStage: nextStage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 15\n    }, this);else if (s === 1) return /*#__PURE__*/_jsxDEV(SetAdmins, {\n      setProjectAdmins: setProjectAdmins,\n      nextStage: nextStage,\n      previousStage: previousStage,\n      creator: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }, this);else if (s === 2) return /*#__PURE__*/_jsxDEV(SetMilestones, {\n      setProjectMilestones: setProjectMilestones,\n      setProjectRequiredMilestones: setProjectRequiredMilestones,\n      nextStage: nextStage,\n      previousStage: previousStage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 15\n    }, this);else if (s === 3) return /*#__PURE__*/_jsxDEV(Preview, {\n      title: projectTitle,\n      admins: projectAdmins,\n      milestones: projectMilestones,\n      requiredMilestones: projectRequiredMilestones,\n      previousStage: previousStage,\n      creator: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 15\n    }, this);\n  };\n\n  const [projectTitle, setProjectTitle] = useState(\"\");\n  const [projectAdmins, setProjectAdmins] = useState([]);\n  const [projectMilestones, setProjectMilestones] = useState([]);\n  const [projectRequiredMilestones, setProjectRequiredMilestones] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyAppBar, {\n      title: \"New Project\",\n      logoutFun: () => {},\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: isDrawerOpen,\n      onClose: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: showForm(stage)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n};\n\n_s6(NewProjectForm, \"KAdt0Eox/5QzomrJ0aqFJ7nobZI=\");\n\n_c6 = NewProjectForm;\nexport default NewProjectForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SetTitle\");\n$RefreshReg$(_c2, \"SetAdmins\");\n$RefreshReg$(_c3, \"MilestoneForm\");\n$RefreshReg$(_c4, \"SetMilestones\");\n$RefreshReg$(_c5, \"Preview\");\n$RefreshReg$(_c6, \"NewProjectForm\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/frontend/src/components/NewProjectForm.js"],"names":["React","useEffect","useState","useNavigate","Box","Button","Card","CardActions","CardContent","Checkbox","CssBaseline","Divider","Drawer","IconButton","List","ListItem","ListItemText","ListSubheader","Stack","TextField","Typography","AddIcon","RemoveIcon","getToken","getUser","refresh","MyAppBar","SideMenu","SetTitle","setProjectTitle","nextStage","title","setTitle","width","e","target","value","mb","SetAdmins","setProjectAdmins","previousStage","creator","searchTerm","setSearchTerm","admins","setAdmins","suggestions","setSuggestions","fetch","mode","method","headers","then","res","json","data","console","log","filter","s","_id","val","username","includes","map","suggestion","admin","color","MilestoneForm","otherMilestones","setToggle","setMilestones","otherRequiredMilestones","setRequiredMilestones","milestoneName","setMilestoneName","milestoneRequired","setMilestoneRequired","milestonePrerequisites","setMilestonePrerequisites","saveMilestone","body","JSON","stringify","name","prerequisites","m","ok","Error","catch","err","message","prerequisite","SetMilestones","setProjectMilestones","setProjectRequiredMilestones","milestones","requiredMilestones","setRequiredMilestone","toggle","mt","milestone","Preview","navigate","project","a","NewProjectForm","isDrawerOpen","setDrawer","toggleDrawer","user","setLocalUser","stage","setStage","showForm","projectTitle","projectAdmins","projectMilestones","projectRequiredMilestones","margin","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useNavigate } from 'react-router';\nimport {Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Divider, Drawer, IconButton, List, ListItem, ListItemText,ListSubheader, Stack, TextField, Typography} from \"@mui/material\"\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport { getToken, getUser, refresh } from '../utilities/LoginService';\nimport MyAppBar from './MyAppBar';\nimport SideMenu from './SideMenu';\n\nconst SetTitle = ({setProjectTitle, nextStage}) => {\n\n  const [title, setTitle] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create a new Project\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Project Title\"\n          label=\"Project Title\"\n          name=\"title\"\n          autoComplete=\"Title 1\"\n          value = {title}\n          onChange={(e)=>{setTitle(e.target.value)}}\n          autoFocus\n        />\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setProjectTitle(title)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SetAdmins = ({setProjectAdmins, nextStage, previousStage, creator}) => {\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [admins, setAdmins] = useState([creator,])\n  const [suggestions, setSuggestions] = useState([])\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/users\",\n    {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n    .then((res)=>res.json())\n    .then((data)=>{\n      console.log(\"Users\")\n      console.log(data)\n      data = data.filter(s=>s._id!==creator._id)\n      setSuggestions(data)\n    })\n  }, [creator,])\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select project administrators\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        <List>\n          {suggestions.filter((val)=>(val.username.includes(searchTerm))).map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <IconButton onClick={()=>{\n                setAdmins([...admins, val])\n                setSuggestions(suggestions.filter((suggestion)=>(suggestion._id !== val._id)))\n              }}>\n                <AddIcon color='success'></AddIcon>\n              </IconButton>\n            }>\n              <ListItemText primary={val.username} secondary={\"#\"+val._id}></ListItemText>\n            </ListItem>\n          )))}\n        </List>\n        <Divider></Divider>\n        <List>\n          {admins.map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <IconButton onClick={()=>{\n                setSuggestions([...suggestions, val])\n                setAdmins(admins.filter((admin)=>(admin._id !== val._id)))\n              }}>\n                <RemoveIcon sx={{color:\"red\"}}></RemoveIcon>\n              </IconButton>\n            }>\n              <ListItemText primary={val.username} secondary={\"#\"+val._id}></ListItemText>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Back\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setProjectAdmins(admins)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\n\nconst MilestoneForm = ({otherMilestones, setToggle, setMilestones, otherRequiredMilestones, setRequiredMilestones}) => {\n\n  const [milestoneName, setMilestoneName] = useState(\"\")\n  const [milestoneRequired, setMilestoneRequired] = useState(false)\n  const [milestonePrerequisites, setMilestonePrerequisites] = useState([])\n\n  const saveMilestone = ()=>{\n\n    fetch(\"http://localhost:8000/milestones/\",{\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"x-access-token\": getToken(),\n      },\n      body: JSON.stringify({\n        name: milestoneName,\n        prerequisites: milestonePrerequisites.map((m)=>m._id)\n      })\n    })\n    .then((res)=>{\n      if(res.ok)\n        return res.json()\n      else\n        throw Error(\"Refresh Error\")\n    })\n    .then((data)=>{\n      console.log(\"Milestone\")\n      console.log(data)\n      setMilestones([...otherMilestones, data])\n      if(milestoneRequired)\n      {\n        setRequiredMilestones([...otherRequiredMilestones, data])\n      }\n    })\n    .catch((err)=>{\n      console.log(err.message)\n    })\n    return true\n  }\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          New Milestone\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"name\"\n          label=\"Milestone Name\"\n          name=\"name\"\n          autoFocus\n          value={milestoneName}\n          onChange={(e)=>{setMilestoneName(e.target.value)}}\n        />\n        <Button\n          fullWidth\n          variant={(milestoneRequired)?\"contained\":\"outlined\"}\n          onClick={()=>{\n            setMilestoneRequired(!milestoneRequired)\n          }}\n        >\n          Required\n        </Button>\n        <List subheader={\n          <ListSubheader component=\"div\">\n            Prerequisites\n          </ListSubheader>\n        }>\n          {otherMilestones.map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox value={milestonePrerequisites.includes(val.name)} onChange={()=>{\n                  if(milestonePrerequisites.includes(val._id))\n                  {\n                    setMilestonePrerequisites(milestonePrerequisites.filter((prerequisite)=>(prerequisite !== val.name)))\n                  }\n                  else\n                  {\n                    setMilestonePrerequisites([...milestonePrerequisites, val.name])\n                  }\n                }\n              }></Checkbox>\n            }>\n              <ListItemText primary={val.name} secondary={(otherRequiredMilestones.includes(val))?\"Required\":\"Optional\"} ></ListItemText>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setToggle(false)\n          }}\n        >\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            if(saveMilestone())\n              setToggle(false)\n          }}\n        >\n          Save\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\n\n\nconst SetMilestones = ({setProjectMilestones, setProjectRequiredMilestones, nextStage, previousStage}) => {\n  const [milestones, setMilestones] = useState([])\n  const [requiredMilestones, setRequiredMilestone] = useState([])\n  const [toggle, setToggle] = useState(false)\n  return (\n    (!toggle)?\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create Milestones for the Project\n        </Typography>\n        <Button fullWidth variant='outlined' sx={{mt:2}} onClick={()=>setToggle(true)}> Add Milestone</Button>\n        <List>\n          {milestones.map((val=>(\n            <ListItem key={val.name} secondaryAction={\n              <IconButton onClick={()=>{\n                setMilestones(milestones.filter((milestone)=>(milestone.name !== val.name)))\n              }}>\n                <RemoveIcon sx={{color:\"red\"}}></RemoveIcon>\n              </IconButton>\n            }>\n              <ListItemText primary={val.name + \" #\" + val._id} secondary={(requiredMilestones.includes(val))?\"Required\":\"Optional\"}></ListItemText>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setProjectMilestones(milestones)\n            setProjectRequiredMilestones(requiredMilestones)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>:\n    <MilestoneForm otherMilestones={milestones} setToggle={setToggle} setMilestones={setMilestones} otherRequiredMilestones={requiredMilestones} setRequiredMilestones={setRequiredMilestone}></MilestoneForm>\n  )\n}\n\nconst Preview = ({title, admins, milestones, requiredMilestones, previousStage, creator}) => {\n\n  const navigate = useNavigate();\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          {title}\n        </Typography>\n        <Stack direction=\"row\" justifyContent=\"space-evenly\">\n          <List subheader={\n            <ListSubheader component=\"div\">\n              Admins\n            </ListSubheader>\n          }>\n            {admins.map((val=>(\n              <ListItem key={val._id} divider=\"true\">\n                <ListItemText primary={val.username} secondary={\"#\"+val._id}></ListItemText>\n              </ListItem>\n            )))}\n          </List>\n          <List subheader={\n            <ListSubheader component=\"div\">\n              Milestones\n            </ListSubheader>\n          }>\n            {milestones.map((val=>(\n              <ListItem key={val._id} divider=\"true\">\n                <ListItemText primary={val.name} secondary={(requiredMilestones.includes(val))?\"Required\":\"Optional\"}></ListItemText>\n              </ListItem>\n            )))}\n          </List>\n        </Stack>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            const project = {\n              title, \n              admins: admins.map((a)=>(a._id)), \n              milestones : milestones.map((m)=>(m._id)),\n              requiredMilestones: requiredMilestones.map((m)=>(m._id))\n            }\n            console.log(project)\n            fetch(\"http://localhost:8000/projects\",\n            {\n              mode: \"cors\",\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n                \"x-access-token\": getToken(), \n                \"Access-Control-Allow-Origin\": \"*\"\n              },\n              body: JSON.stringify(project)\n            })\n            .then((res)=>{\n              if(res.ok)\n              {\n                return res.json()\n              }\n            })\n            .then((data)=>{\n              console.log(\"Created Project\")\n              console.log(data)\n              navigate(\"/\")\n            })\n\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\n\n\n\n\nconst NewProjectForm = () => {\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n  const toggleDrawer = ()=>{\n    setDrawer(!isDrawerOpen)\n  }\n\n  const [user, setLocalUser] = useState(getUser())\n  const [stage, setStage] = useState(0);\n  const nextStage = ()=>{\n    setStage(stage+1);\n  }\n  const previousStage = ()=>{\n    setStage(stage-1);\n  }\n\n  useEffect(()=>{\n    refresh(setLocalUser)\n  },[])\n\n  const showForm = (s)=>{\n    if(s === 0)\n      return (<SetTitle setProjectTitle = {setProjectTitle} nextStage = {nextStage}></SetTitle>)\n    else if (s === 1)\n      return (<SetAdmins setProjectAdmins={setProjectAdmins} nextStage = {nextStage} previousStage = {previousStage} creator = {user}></SetAdmins>)\n    else if (s === 2)\n      return (<SetMilestones setProjectMilestones={setProjectMilestones} setProjectRequiredMilestones={setProjectRequiredMilestones} nextStage = {nextStage} previousStage = {previousStage}></SetMilestones>)\n    else if (s === 3)\n      return (<Preview title={projectTitle} admins = {projectAdmins} milestones = {projectMilestones} requiredMilestones = {projectRequiredMilestones} previousStage = {previousStage} creator={user}></Preview>)\n  }\n\n  const [projectTitle, setProjectTitle] = useState(\"\")\n  const [projectAdmins, setProjectAdmins] = useState([])\n  const [projectMilestones, setProjectMilestones] = useState([])\n  const [projectRequiredMilestones, setProjectRequiredMilestones] = useState([])\n\n  return (\n    <div>\n      <CssBaseline></CssBaseline>\n      <MyAppBar title=\"New Project\" logoutFun={()=>{}} toggleDrawer={toggleDrawer}></MyAppBar>\n      <Drawer\n          anchor={\"left\"}\n          open={isDrawerOpen}\n          onClose={toggleDrawer}\n        >\n          <SideMenu></SideMenu>\n      </Drawer>\n      <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n              }}>\n        {showForm(stage)}\n      </Box>\n    </div>\n  )\n}\n\nexport default NewProjectForm"]},"metadata":{},"sourceType":"module"}