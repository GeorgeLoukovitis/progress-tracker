{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\Frontend\\\\src\\\\components\\\\AwardMilestones.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { getToken } from '../utilities/LoginService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectMilestone = _ref => {\n  _s();\n\n  let {\n    nextStage,\n    setMilestoneToAward,\n    projectId\n  } = _ref;\n  const [project, setProject] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      console.log(\"Project\");\n      console.log(data);\n      setProject(data);\n    });\n  }, []);\n  const navigate = useNavigate();\n  const [milestone, setMilestone] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select Milestone To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), project ? /*#__PURE__*/_jsxDEV(List, {\n        children: project.milestones.map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: milestone == val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              setMilestone(val);\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.name,\n              secondary: project.requiredMilestones.includes(val._id) ? \"Required\" : \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/manage-projects\");\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setMilestoneToAward(milestone);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectMilestone, \"maQ3o6fHrBHmlt+j4uC1G4CRGbg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SelectMilestone;\n\nconst SelectUser = _ref2 => {\n  _s2();\n\n  let {\n    previousStage,\n    nextStage,\n    setUserIds\n  } = _ref2;\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/users/\").then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      // console.log(data)\n      setUsers(data);\n    });\n  }, []);\n  const [usersToAward, setUsersToAward] = useState([]);\n  const navigate = useNavigate();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select Users To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: users.filter(u => u.username.includes(searchTerm)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: usersToAward.includes(val._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              if (usersToAward.includes(val.id)) {\n                console.log(\"Remove\");\n                setUsersToAward(usersToAward.filter(u => u != val._id));\n              } else {\n                console.log(\"Add\");\n                setUsersToAward([...usersToAward, val._id]);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.username,\n              secondary: \"#\" + val._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setUserIds(usersToAward);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SelectUser, \"5MHNw7XepIddGjPpZWmffCnU0W8=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = SelectUser;\n\nconst SuccessScreen = () => {\n  _s3();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Milestoned Awarded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/\");\n        },\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(SuccessScreen, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c3 = SuccessScreen;\n\nconst AwardMilestones = () => {\n  _s4();\n\n  const {\n    projectId\n  } = useParams();\n  const [stage, setStage] = useState(0);\n\n  const nextStage = () => {\n    setStage(stage + 1);\n  };\n\n  const previousStage = () => {\n    setStage(stage - 1);\n  };\n\n  const awardUsers = () => {\n    console.log(\"Award\");\n    console.log(milestoneToAward);\n    console.log(userIds);\n    fetch(\"http://localhost:8000/awardMilestone/\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        milestoneId: milestoneToAward._id,\n        userIds\n      })\n    });\n  };\n\n  const [userIds, setUserIds] = useState([]);\n  const [milestoneToAward, setMilestoneToAward] = useState(null);\n\n  const showForm = (s, previousStage, nextStage, setMilestoneToAward) => {\n    if (s === 0) return /*#__PURE__*/_jsxDEV(SelectMilestone, {\n      nextStage: nextStage,\n      setMilestoneToAward: setMilestoneToAward,\n      projectId: projectId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }, this);else if (s === 1) return /*#__PURE__*/_jsxDEV(SelectUser, {\n      previousStage: previousStage,\n      nextStage: nextStage,\n      setUserIds: setUserIds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }, this);else if (s === 2) {\n      awardUsers();\n      return /*#__PURE__*/_jsxDEV(SuccessScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: showForm(stage, previousStage, nextStage, setMilestoneToAward)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(AwardMilestones, \"3aChEs1H+MlUhm39Xc8gdL3E0AE=\", false, function () {\n  return [useParams];\n});\n\n_c4 = AwardMilestones;\nexport default AwardMilestones;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SelectMilestone\");\n$RefreshReg$(_c2, \"SelectUser\");\n$RefreshReg$(_c3, \"SuccessScreen\");\n$RefreshReg$(_c4, \"AwardMilestones\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/Frontend/src/components/AwardMilestones.js"],"names":["Avatar","Box","Button","Card","CardActions","CardContent","Checkbox","CssBaseline","List","ListItem","ListItemButton","ListItemText","TextField","Typography","React","useEffect","useState","useNavigate","useParams","DoneIcon","getToken","SelectMilestone","nextStage","setMilestoneToAward","projectId","project","setProject","fetch","mode","method","headers","then","res","ok","json","data","console","log","navigate","milestone","setMilestone","width","milestones","map","val","name","requiredMilestones","includes","_id","mb","SelectUser","previousStage","setUserIds","users","setUsers","usersToAward","setUsersToAward","searchTerm","setSearchTerm","e","target","value","filter","u","username","id","SuccessScreen","m","bgcolor","AwardMilestones","stage","setStage","awardUsers","milestoneToAward","userIds","body","JSON","stringify","milestoneId","showForm","s","margin","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import {Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material'\nimport React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport DoneIcon from '@mui/icons-material/Done';\nimport { getToken } from '../utilities/LoginService';\n\n\nconst SelectMilestone = ({nextStage, setMilestoneToAward, projectId}) => {\n\n  const [project, setProject] = useState(null)\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects/\"+projectId,\n    {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n    })\n    .then((data)=>{\n      console.log(\"Project\")\n      console.log(data)\n      setProject(data)\n    })\n  },[])\n  \n  const navigate = useNavigate()\n  const [milestone, setMilestone] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select Milestone To Award\n        </Typography>\n        {(project)?\n        <List>\n          {project.milestones.map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={milestone==val}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{setMilestone(val)}}>\n                <ListItemText primary={val.name} secondary={(project.requiredMilestones.includes(val._id))?\"Required\":\"Optional\"}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>:\n        <div></div>}\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/manage-projects\")\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setMilestoneToAward(milestone)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SelectUser = ({previousStage, nextStage, setUserIds})=> {\n  const [users, setUsers] = useState([])\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/users/\")\n      .then((res)=>{\n        if(res.ok)\n        {\n          return res.json()\n        }\n      })\n      .then((data)=>{\n        // console.log(data)\n        setUsers(data)\n      })\n  },[])\n  \n  const [usersToAward, setUsersToAward] = useState([]) \n  const navigate = useNavigate()\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select Users To Award\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        <List>\n          {users.filter((u)=>(u.username.includes(searchTerm))).map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={usersToAward.includes(val._id)}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{\n                if(usersToAward.includes(val.id))\n                {\n                  console.log(\"Remove\")\n                  setUsersToAward(usersToAward.filter(u=>(u!=val._id)))\n                }\n                else\n                {\n                  console.log(\"Add\")\n                  setUsersToAward([...usersToAward, val._id])\n                }\n              }}>\n                <ListItemText primary={val.username} secondary={\"#\"+val._id}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setUserIds(usersToAward)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SuccessScreen = () => {\n\n  const navigate = useNavigate()\n  \n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Milestoned Awarded\n        </Typography>\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <DoneIcon></DoneIcon>   \n        </Avatar>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/\")\n          }}\n        >\n          Done\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst AwardMilestones = () => {\n\n  const {projectId} = useParams()\n  const [stage, setStage] = useState(0);\n  const nextStage = ()=>{\n    setStage(stage+1);\n  }\n  const previousStage = ()=>{\n    setStage(stage-1);\n  }\n\n  const awardUsers = () => {\n    console.log(\"Award\")\n    console.log(milestoneToAward)\n    console.log(userIds)\n    fetch(\"http://localhost:8000/awardMilestone/\",\n    {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({milestoneId:milestoneToAward._id, userIds})\n    })\n  }\n\n  const [userIds, setUserIds] = useState([])\n  const [milestoneToAward, setMilestoneToAward] = useState(null)\n  \n  const showForm = (s,previousStage, nextStage, setMilestoneToAward)=>{\n    if(s === 0)\n      return (<SelectMilestone nextStage={nextStage} setMilestoneToAward={setMilestoneToAward} projectId={projectId}></SelectMilestone>)\n    else if(s === 1)\n      return (<SelectUser previousStage={previousStage} nextStage={nextStage} setUserIds={setUserIds}></SelectUser>)\n    else if(s === 2)\n    {\n      awardUsers()\n      return (<SuccessScreen></SuccessScreen>)\n    }\n  }\n\n  return (\n    <div>\n      <CssBaseline></CssBaseline>\n      <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n              }}>\n        {showForm(stage, previousStage, nextStage, setMilestoneToAward)}\n      </Box>\n    </div>\n  )\n}\n\nexport default AwardMilestones"]},"metadata":{},"sourceType":"module"}