{"ast":null,"code":"import _slicedToArray from\"C:/Users/Programming/Documents/GitHub/progress-tracker/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Box,Button,Card,CardContent,Checkbox,CssBaseline,Divider,Drawer,List,ListItem,ListItemIcon,ListItemText,Stack,Typography}from'@mui/material';import AssignmentLateIcon from'@mui/icons-material/AssignmentLate';import{React,useState}from'react';import{useParams}from\"react-router-dom\";import MyAppBar from'./MyAppBar';import SideMenu from'./SideMenu';import{useEffect}from'react';import{getToken,getUser,refresh}from'../utilities/LoginService';import{isEnrolled,isMilestoneAchieved,enrollToProject}from'../utilities/ProjectService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProjectScreen=function ProjectScreen(){var _useParams=useParams(),projectId=_useParams.projectId;var _useState=useState(getUser()),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setLocalUser=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),project=_useState4[0],setProject=_useState4[1];// console.log(user);\nuseEffect(function(){refresh(setLocalUser);fetch(\"http://localhost:8000/projects/\"+projectId,{mode:\"cors\",method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"x-access-token\":getToken(),\"Access-Control-Allow-Origin\":\"*\"}}).then(function(res){if(res.ok){return res.json();}else{throw Error();}}).then(function(data){// console.log(\"Project\")\n// console.log(data)\nsetProject(data);});},[projectId]);var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isDrawerOpen=_useState6[0],setDrawer=_useState6[1];var toggleDrawer=function toggleDrawer(){setDrawer(!isDrawerOpen);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(MyAppBar,{toggleDrawer:toggleDrawer}),/*#__PURE__*/_jsx(Drawer,{anchor:\"left\",open:isDrawerOpen,onClose:toggleDrawer,children:/*#__PURE__*/_jsx(SideMenu,{})}),/*#__PURE__*/_jsx(Box,{sx:{margin:4},children:/*#__PURE__*/_jsx(Card,{children:project?/*#__PURE__*/_jsxs(Stack,{padding:4,children:[/*#__PURE__*/_jsxs(Stack,{direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",children:project.title}),/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Details:\"}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:1,children:[/*#__PURE__*/_jsx(Typography,{children:\"Created by:\"}),/*#__PURE__*/_jsx(Typography,{children:project.creator.username})]}),/*#__PURE__*/_jsxs(Stack,{direction:\"row\",spacing:1,children:[/*#__PURE__*/_jsx(Typography,{children:\"Created at:\"}),/*#__PURE__*/_jsx(Typography,{children:Date(project.date).toString().split(\"GMT\")[0]})]})]})})]}),/*#__PURE__*/_jsx(List,{children:project.milestones.map(function(milestone){return/*#__PURE__*/_jsxs(ListItem,{divider:true,secondaryAction:/*#__PURE__*/_jsx(Checkbox,{edge:\"end\",checked:isMilestoneAchieved(user,milestone)}),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(AssignmentLateIcon,{color:\"yellow\"})}),/*#__PURE__*/_jsx(ListItemText,{primary:milestone.name})]},milestone._id);})}),/*#__PURE__*/_jsx(Stack,{direction:\"row\",justifyContent:\"end\",children:/*#__PURE__*/_jsx(Button,{variant:isEnrolled(user,projectId)?\"contained\":\"outlined\",disabled:isEnrolled(user,projectId),color:\"success\",onClick:function onClick(){enrollToProject(projectId,setLocalUser);},children:isEnrolled(user,projectId)?\"Enrolled\":\"Enroll\"})})]}):/*#__PURE__*/_jsx(\"div\",{})})})]});};export default ProjectScreen;","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/Frontend/src/components/ProjectScreen.js"],"names":["Box","Button","Card","CardContent","Checkbox","CssBaseline","Divider","Drawer","List","ListItem","ListItemIcon","ListItemText","Stack","Typography","AssignmentLateIcon","React","useState","useParams","MyAppBar","SideMenu","useEffect","getToken","getUser","refresh","isEnrolled","isMilestoneAchieved","enrollToProject","ProjectScreen","projectId","user","setLocalUser","project","setProject","fetch","mode","method","headers","then","res","ok","json","Error","data","isDrawerOpen","setDrawer","toggleDrawer","margin","title","creator","username","Date","date","toString","split","milestones","map","milestone","name","_id"],"mappings":"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","sourcesContent":["import {Box, Button, Card, CardContent, Checkbox, CssBaseline, Divider, Drawer, List, ListItem, ListItemIcon, ListItemText, Stack, Typography } from '@mui/material'\nimport AssignmentLateIcon from '@mui/icons-material/AssignmentLate';\nimport {React, useState} from 'react'\nimport {useParams} from \"react-router-dom\"\nimport MyAppBar from './MyAppBar';\nimport SideMenu from './SideMenu';\nimport { useEffect } from 'react';\nimport { getToken, getUser, refresh } from '../utilities/LoginService';\nimport { isEnrolled, isMilestoneAchieved, enrollToProject } from '../utilities/ProjectService';\n\nconst ProjectScreen = () => {\n\n  const {projectId} = useParams()\n  const [user, setLocalUser] = useState(getUser())\n  const [project, setProject] = useState(null)\n\n  // console.log(user);\n\n  useEffect(()=>{\n    refresh(setLocalUser)\n    fetch(\"http://localhost:8000/projects/\"+projectId,{\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n      else{\n        throw Error()\n      }\n    })\n    .then((data)=>{\n      // console.log(\"Project\")\n      // console.log(data)\n      setProject(data)\n    })\n  }, [projectId,])\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n  const toggleDrawer = ()=>{\n    setDrawer(!isDrawerOpen)\n  }\n\n  return (\n    <div>\n      <CssBaseline></CssBaseline>\n      <MyAppBar toggleDrawer={toggleDrawer}></MyAppBar>\n      <Drawer\n        anchor={\"left\"}\n        open={isDrawerOpen}\n        onClose={toggleDrawer}\n      >\n        <SideMenu></SideMenu>\n      </Drawer>\n      <Box sx={{margin: 4}}>\n        <Card>\n          {\n            (project)?\n            <Stack padding={4}>\n              <Stack direction=\"row\" justifyContent=\"space-between\">\n                <Typography variant='h3'>{project.title}</Typography>\n                <Card>\n                  <CardContent>\n                    <Typography variant='h5'>Details:</Typography>\n                    <Divider></Divider>\n                    <Stack direction=\"row\" spacing={1}>\n                      <Typography>Created by:</Typography>\n                      <Typography>{project.creator.username}</Typography>\n                    </Stack>\n                    <Stack direction=\"row\" spacing={1}>\n                      <Typography>Created at:</Typography>\n                      <Typography>{Date(project.date).toString().split(\"GMT\")[0]}</Typography>\n                    </Stack>\n                  </CardContent>\n                </Card>\n              </Stack>\n              <List>\n                {project.milestones.map((milestone)=>(\n                  <ListItem divider={true} key={milestone._id} secondaryAction={\n                    <Checkbox\n                      edge=\"end\"\n                      checked={isMilestoneAchieved(user,milestone)}\n                    />\n                  }>\n                    <ListItemIcon>\n                      <AssignmentLateIcon color='yellow'></AssignmentLateIcon>\n                    </ListItemIcon>\n                    <ListItemText primary = {milestone.name}></ListItemText>\n                  </ListItem>\n                ))}\n              </List>\n              <Stack direction=\"row\" justifyContent=\"end\">\n              <Button variant={(isEnrolled(user,projectId))?\"contained\":\"outlined\"} disabled={isEnrolled(user,projectId)} color='success' onClick={()=>{enrollToProject(projectId,setLocalUser)}}>{(isEnrolled(user,projectId))?\"Enrolled\":\"Enroll\"}</Button>\n              </Stack>\n            </Stack>:\n            <div></div>\n          }\n        </Card>\n      </Box>\n    </div>\n  )\n}\n\nexport default ProjectScreen"]},"metadata":{},"sourceType":"module"}