{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Programming\\\\Documents\\\\GitHub\\\\progress-tracker\\\\Frontend\\\\src\\\\components\\\\AwardMilestones.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Drawer, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material';\nimport DoneIcon from '@mui/icons-material/Done';\nimport MyAppBar from './MyAppBar';\nimport { getToken } from '../utilities/LoginService';\nimport { isMilestoneAchieved } from \"../utilities/ProjectService\";\nimport SideMenu from './SideMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectMilestone = _ref => {\n  _s();\n\n  let {\n    previousStage,\n    nextStage,\n    setMilestoneToAward,\n    projectId,\n    userToAward\n  } = _ref;\n  const [project, setProject] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      console.log(\"Project\");\n      console.log(data);\n      setProject(data);\n    });\n  }, [projectId]);\n  const [milestone, setMilestone] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select Milestone To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), project ? /*#__PURE__*/_jsxDEV(List, {\n        children: project.milestones.filter(m => !isMilestoneAchieved(userToAward, m)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: milestone === val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              setMilestone(val);\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.name,\n              secondary: project.requiredMilestones.includes(val._id) ? \"Required\" : \"Optional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setMilestoneToAward(milestone);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectMilestone, \"xl+H7AsowcZ1+q5Csn0ggrHTZZg=\");\n\n_c = SelectMilestone;\n\nconst SelectUser = _ref2 => {\n  _s2();\n\n  let {\n    previousStage,\n    nextStage,\n    setUserToAward\n  } = _ref2;\n  const {\n    projectId\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/enrolledUsers/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(data => {\n      setUsers(data);\n    });\n  }, [projectId]);\n  const navigate = useNavigate();\n  const [selectedUser, setSelectedUser] = useState({\n    _id: 0\n  });\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Select Users To Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: users.filter(u => u.username.includes(searchTerm)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: selectedUser._id === val._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              if (selectedUser._id === val._id) {\n                console.log(\"Remove\");\n                setSelectedUser(null);\n              } else {\n                console.log(\"Add\");\n                setSelectedUser(val);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.username,\n              secondary: \"#\" + val._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/manage-projects\");\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setUserToAward(selectedUser);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SelectUser, \"RzVwgWU5io28Rjy+pFs3fJ48iqY=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c2 = SelectUser;\n\nconst SelectSupport = _ref3 => {\n  _s3();\n\n  let {\n    previousStage,\n    nextStage,\n    setAwardSupport,\n    userToAward\n  } = _ref3;\n  const {\n    projectId\n  } = useParams();\n  const [milestones, setMilestones] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/projects/\" + projectId, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw Error();\n      }\n    }).then(data => {\n      console.log(\"Project\");\n      console.log(data);\n      setMilestones(data.milestones);\n    });\n  }, [projectId]);\n  const [support, setSupport] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Why is the User Awarded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Search Bar\",\n        label: \"Search\",\n        name: \"search-bar\",\n        value: searchTerm,\n        onChange: e => {\n          setSearchTerm(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: milestones.filter(m => m.name.includes(searchTerm) && isMilestoneAchieved(userToAward, m)).map(val => /*#__PURE__*/_jsxDEV(ListItem, {\n          secondaryAction: /*#__PURE__*/_jsxDEV(Checkbox, {\n            checked: support.includes(val._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              if (support.includes(val._id)) {\n                console.log(\"Remove\");\n                setSupport(support.filter(m => m !== val._id));\n              } else {\n                console.log(\"Add\");\n                setSupport([...support, val._id]);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: val.name,\n              secondary: \"#\" + val._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)\n        }, val._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          previousStage();\n        },\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setAwardSupport(support);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(SelectSupport, \"uEe47W4tABD/BDh9+3Tb0oIubuE=\", false, function () {\n  return [useParams];\n});\n\n_c3 = SelectSupport;\n\nconst SetData = _ref4 => {\n  _s4();\n\n  let {\n    setAwardData,\n    previousStage,\n    nextStage\n  } = _ref4;\n  const [data, SetData] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Enter a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"normal\",\n        fullWidth: true,\n        id: \"Project Title\",\n        label: \"Project Title\",\n        name: \"title\",\n        autoComplete: \"Title 1\",\n        value: title,\n        onChange: e => {\n          setTitle(e.target.value);\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          setProjectTitle(title);\n          nextStage();\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(SetData, \"hMIW/2hXYbM+R02to0dHjj1i110=\");\n\n_c4 = SetData;\n\nconst SuccessScreen = () => {\n  _s5();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 500\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Milestoned Awarded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          m: 1,\n          bgcolor: 'secondary.main'\n        },\n        children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        sx: {\n          mb: 2\n        },\n        onClick: () => {\n          navigate(\"/\");\n        },\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n};\n\n_s5(SuccessScreen, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c5 = SuccessScreen;\n\nconst AwardMilestones = () => {\n  _s6();\n\n  const {\n    projectId\n  } = useParams();\n  const [isDrawerOpen, setDrawer] = useState(false);\n\n  const toggleDrawer = () => {\n    setDrawer(!isDrawerOpen);\n  };\n\n  const [stage, setStage] = useState(0);\n\n  const nextStage = () => {\n    setStage(stage + 1);\n  };\n\n  const previousStage = () => {\n    setStage(stage - 1);\n  };\n\n  const awardUsers = () => {\n    console.log(\"Award\");\n    console.log(milestoneToAward);\n    console.log(userToAward);\n    fetch(\"http://localhost:8000/awardMilestone/\", {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(),\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        milestoneId: milestoneToAward._id,\n        userId: userToAward._id,\n        data: \"\",\n        support: awardSupport\n      })\n    });\n  };\n\n  const [userToAward, setUserToAward] = useState(null);\n  const [milestoneToAward, setMilestoneToAward] = useState(null);\n  const [awardSupport, setAwardSupport] = useState([]);\n  const [awardData, setAwardData] = useState(\"\");\n\n  const showForm = (s, previousStage, nextStage, setMilestoneToAward) => {\n    if (s === 0) return /*#__PURE__*/_jsxDEV(SelectUser, {\n      nextStage: nextStage,\n      setUserToAward: setUserToAward\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 15\n    }, this);else if (s === 1) return /*#__PURE__*/_jsxDEV(SelectMilestone, {\n      previousStage: previousStage,\n      nextStage: nextStage,\n      setMilestoneToAward: setMilestoneToAward,\n      projectId: projectId,\n      userToAward: userToAward\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }, this);else if (s === 2) return /*#__PURE__*/_jsxDEV(SelectSupport, {\n      previousStage: previousStage,\n      nextStage: nextStage,\n      setAwardSupport: setAwardSupport,\n      userToAward: userToAward\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 15\n    }, this);else if (s === 3) {\n      awardUsers();\n      return /*#__PURE__*/_jsxDEV(SuccessScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 15\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MyAppBar, {\n      title: \"Award Milestone\",\n      logoutFun: () => {},\n      toggleDrawer: toggleDrawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: isDrawerOpen,\n      onClose: toggleDrawer,\n      children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        margin: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: showForm(stage, previousStage, nextStage, setMilestoneToAward)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n};\n\n_s6(AwardMilestones, \"BZeMJQiPBnxjXhqElLoMlNd8lmU=\", false, function () {\n  return [useParams];\n});\n\n_c6 = AwardMilestones;\nexport default AwardMilestones;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"SelectMilestone\");\n$RefreshReg$(_c2, \"SelectUser\");\n$RefreshReg$(_c3, \"SelectSupport\");\n$RefreshReg$(_c4, \"SetData\");\n$RefreshReg$(_c5, \"SuccessScreen\");\n$RefreshReg$(_c6, \"AwardMilestones\");","map":{"version":3,"sources":["C:/Users/Programming/Documents/GitHub/progress-tracker/Frontend/src/components/AwardMilestones.js"],"names":["React","useEffect","useState","useNavigate","useParams","Avatar","Box","Button","Card","CardActions","CardContent","Checkbox","CssBaseline","Drawer","List","ListItem","ListItemButton","ListItemText","TextField","Typography","DoneIcon","MyAppBar","getToken","isMilestoneAchieved","SideMenu","SelectMilestone","previousStage","nextStage","setMilestoneToAward","projectId","userToAward","project","setProject","fetch","mode","method","headers","then","res","ok","json","data","console","log","milestone","setMilestone","width","milestones","filter","m","map","val","name","requiredMilestones","includes","_id","mb","SelectUser","setUserToAward","users","setUsers","navigate","selectedUser","setSelectedUser","searchTerm","setSearchTerm","e","target","value","u","username","SelectSupport","setAwardSupport","setMilestones","Error","support","setSupport","SetData","setAwardData","title","setTitle","setProjectTitle","SuccessScreen","bgcolor","AwardMilestones","isDrawerOpen","setDrawer","toggleDrawer","stage","setStage","awardUsers","milestoneToAward","body","JSON","stringify","milestoneId","userId","awardSupport","awardData","showForm","s","margin","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Avatar, Box, Button, Card, CardActions, CardContent, Checkbox, CssBaseline, Drawer, List, ListItem, ListItemButton, ListItemText, TextField, Typography } from '@mui/material'\nimport DoneIcon from '@mui/icons-material/Done';\nimport MyAppBar from './MyAppBar';\nimport { getToken } from '../utilities/LoginService';\nimport {isMilestoneAchieved} from \"../utilities/ProjectService\"\nimport SideMenu from './SideMenu';\n\n\nconst SelectMilestone = ({previousStage, nextStage, setMilestoneToAward, projectId, userToAward}) => {\n\n  const [project, setProject] = useState(null)\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects/\"+projectId,\n    {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n    })\n    .then((data)=>{\n      console.log(\"Project\")\n      console.log(data)\n      setProject(data)\n    })\n  },[projectId,])\n  \n  const [milestone, setMilestone] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select Milestone To Award\n        </Typography>\n        {(project)?\n        <List>\n          {project.milestones.filter((m)=>(!isMilestoneAchieved(userToAward, m))).map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={milestone===val}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{setMilestone(val)}}>\n                <ListItemText primary={val.name} secondary={(project.requiredMilestones.includes(val._id))?\"Required\":\"Optional\"}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>:\n        <div></div>}\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setMilestoneToAward(milestone)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SelectUser = ({previousStage, nextStage, setUserToAward})=> {\n  const {projectId} = useParams()\n  const [users, setUsers] = useState([])\n  useEffect(()=>{\n    \n    fetch(\"http://localhost:8000/enrolledUsers/\"+projectId,\n    {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n      .then((res)=>{\n        if(res.ok)\n        {\n          return res.json()\n        }\n      })\n      .then((data)=>{\n        setUsers(data)\n      })\n  },[projectId,])\n  \n  const navigate = useNavigate()\n  const [selectedUser, setSelectedUser] = useState({_id:0}) \n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Select Users To Award\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        <List>\n          {users.filter((u)=>(u.username.includes(searchTerm))).map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={selectedUser._id === val._id}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{\n                if(selectedUser._id === val._id)\n                {\n                  console.log(\"Remove\")\n                  setSelectedUser(null)\n                }\n                else\n                {\n                  console.log(\"Add\")\n                  setSelectedUser(val)\n                }\n              }}>\n                <ListItemText primary={val.username} secondary={\"#\"+val._id}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/manage-projects\")\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setUserToAward(selectedUser)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SelectSupport = ({previousStage, nextStage, setAwardSupport, userToAward}) => {\n\n  const {projectId} = useParams();\n  const [milestones, setMilestones] = useState([])\n\n  useEffect(()=>{\n    fetch(\"http://localhost:8000/projects/\"+projectId,{\n      mode: \"cors\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n    })\n    .then((res)=>{\n      if(res.ok)\n      {\n        return res.json()\n      }\n      else{\n        throw Error()\n      }\n    })\n    .then((data)=>{\n      console.log(\"Project\")\n      console.log(data)\n      setMilestones(data.milestones)\n    })\n  }, [projectId,])\n\n  const [support, setSupport] = useState([]) \n  const [searchTerm, setSearchTerm] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Why is the User Awarded\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Search Bar\"\n          label=\"Search\"\n          name=\"search-bar\"\n          value = {searchTerm}\n          onChange={(e)=>{setSearchTerm(e.target.value)}}\n          autoFocus\n        />\n        <List>\n          {milestones.filter((m)=>(m.name.includes(searchTerm) && isMilestoneAchieved(userToAward, m))).map((val=>(\n            <ListItem key={val._id} secondaryAction={\n              <Checkbox checked={support.includes(val._id)}></Checkbox>\n            }>\n              <ListItemButton onClick={()=>{\n                if(support.includes(val._id))\n                {\n                  console.log(\"Remove\")\n                  setSupport(support.filter(m=>(m!==val._id)))\n                }\n                else\n                {\n                  console.log(\"Add\")\n                  setSupport([...support, val._id])\n                }\n              }}>\n                <ListItemText primary={val.name} secondary={\"#\"+val._id}></ListItemText>\n              </ListItemButton>\n            </ListItem>\n          )))}\n        </List>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            previousStage()\n          }}\n        >\n          Previous\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setAwardSupport(support)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SetData = ({setAwardData, previousStage, nextStage}) => {\n\n  const [data, SetData] = useState(\"\")\n\n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter a\n        </Typography>\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          id=\"Project Title\"\n          label=\"Project Title\"\n          name=\"title\"\n          autoComplete=\"Title 1\"\n          value = {title}\n          onChange={(e)=>{setTitle(e.target.value)}}\n          autoFocus\n        />\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            setProjectTitle(title)\n            nextStage()\n          }}\n        >\n          Next\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst SuccessScreen = () => {\n\n  const navigate = useNavigate()\n  \n  return (\n    <Card sx={{width:500}}>\n      <CardContent>\n        <Typography component=\"h1\" variant=\"h5\">\n          Milestoned Awarded\n        </Typography>\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          <DoneIcon></DoneIcon>   \n        </Avatar>\n      </CardContent>\n      <CardActions>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          sx={{ mb: 2 }}\n          onClick={()=>{\n            navigate(\"/\")\n          }}\n        >\n          Done\n        </Button>\n      </CardActions>\n      \n    </Card>\n  )\n}\n\nconst AwardMilestones = () => {\n\n  const {projectId} = useParams()\n\n  const [isDrawerOpen, setDrawer] = useState(false);\n  const toggleDrawer = ()=>{\n    setDrawer(!isDrawerOpen)\n  }\n\n  const [stage, setStage] = useState(0);\n  const nextStage = ()=>{\n    setStage(stage+1);\n  }\n  const previousStage = ()=>{\n    setStage(stage-1);\n  }\n\n  const awardUsers = () => {\n    console.log(\"Award\")\n    console.log(milestoneToAward)\n    console.log(userToAward)\n    fetch(\"http://localhost:8000/awardMilestone/\",\n    {\n      mode: \"cors\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": getToken(), \n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({milestoneId:milestoneToAward._id, userId: userToAward._id, data: \"\", support: awardSupport})\n    })\n  }\n\n  const [userToAward, setUserToAward] = useState(null)\n  const [milestoneToAward, setMilestoneToAward] = useState(null)\n  const [awardSupport, setAwardSupport] = useState([])\n  const [awardData, setAwardData] = useState(\"\")\n  \n  const showForm = (s,previousStage, nextStage, setMilestoneToAward)=>{\n    if(s === 0)\n      return (<SelectUser nextStage={nextStage} setUserToAward={setUserToAward}></SelectUser>)\n    else if(s === 1)\n      return (<SelectMilestone previousStage={previousStage} nextStage={nextStage} setMilestoneToAward={setMilestoneToAward} projectId={projectId} userToAward={userToAward}></SelectMilestone>)\n    else if(s ===2)\n      return (<SelectSupport previousStage={previousStage} nextStage={nextStage} setAwardSupport={setAwardSupport} userToAward={userToAward}></SelectSupport>)\n    else if(s === 3)\n    {\n      awardUsers()\n      return (<SuccessScreen></SuccessScreen>)\n    }\n  }\n\n  return (\n    <div>\n      <MyAppBar title=\"Award Milestone\" logoutFun={()=>{}} toggleDrawer={toggleDrawer}></MyAppBar>\n      <CssBaseline></CssBaseline>\n      <Drawer\n          anchor={\"left\"}\n          open={isDrawerOpen}\n          onClose={toggleDrawer}\n        >\n          <SideMenu></SideMenu>\n      </Drawer>\n      <Box sx={{margin: 4,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center', \n              }}>\n        {showForm(stage, previousStage, nextStage, setMilestoneToAward)}\n      </Box>\n    </div>\n  )\n}\n\nexport default AwardMilestones"]},"metadata":{},"sourceType":"module"}